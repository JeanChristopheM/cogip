{"mappings":"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","sources":["src/components/invoices/Invoice.jsx","src/components/invoices/InvoiceControls.jsx","src/components/reusables/CompanySelector.jsx","src/logic/formValidation.js","src/logic/dateFormatter.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport InvoiceControls from \"./InvoiceControls.jsx\";\r\nimport CompanySelector from \"../reusables/CompanySelector.jsx\";\r\nimport ContactSelector from \"../reusables/ContactSelector.jsx\";\r\nimport handleRequests from \"../../logic/handleRequests\";\r\nimport { invoiceVerify } from \"../../logic/formValidation.js\";\r\nimport { dateFormatter } from \"../../logic/dateFormatter\";\r\nimport InvoiceIllustration from \"../reusables/InvoiceIllustration.jsx\";\r\n\r\n// toaster\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// end toaster\r\n\r\nfunction Invoice({ invoices, companies, contacts, setIsLoaded, isAuth }) {\r\n  let params = useParams();\r\n  const navigate = useNavigate();\r\n  const loaded = invoices.length > 0 ? true : false;\r\n  const invoice = invoices.find((el) => el.id == params.invoiceId);\r\n  const company = invoice\r\n    ? companies.find((el) => el.id == invoice.company)\r\n    : null;\r\n  const contact = invoice\r\n    ? invoice.contact !== \"\"\r\n      ? contacts.find((el) => el.id == invoice.contact)\r\n      : \"\"\r\n    : \"\";\r\n  let year = invoice ? invoice.received.slice(0, 4) : null;\r\n  let month = invoice ? invoice.received.slice(5, 7) : null;\r\n  let day = invoice ? invoice.received.slice(8, 10) : null;\r\n\r\n  const [isModifying, setIsModifying] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [selectedCompany, setSelectedCompany] = useState(company);\r\n  const [selectedContact, setSelectedContact] = useState(contact);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [newDue, setNewDue] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!invoice) navigate(\"/invoices\");\r\n  }, [invoices]);\r\n  const handleContactChange = (value) => {\r\n    setSelectedContact(value);\r\n  };\r\n  const handleCompanyChange = (value) => {\r\n    setSelectedCompany(value);\r\n  };\r\n\r\n  const amountRef = useRef();\r\n  const receivedRef = useRef();\r\n  const paidRef = useRef();\r\n  const dueRef = useRef();\r\n  const dueDateRef = useRef();\r\n  //. Submitting modification function.\r\n  const submit = async (e) => {\r\n    const formData = {\r\n      reference: e.target.reference.value,\r\n      amount: e.target.amount.value,\r\n      company: selectedCompany.id.toString(),\r\n      contact:\r\n        e.target.contact.value === \"\"\r\n          ? 0\r\n          : contacts.find(\r\n              (el) => `${el.firstname} ${el.lastname}` == e.target.contact.value\r\n            ),\r\n      received: receivedRef.current.value,\r\n      paidStatus:\r\n        amountRef.current.value - paidRef.current.value === 0 ? true : false,\r\n      paid: paidRef.current.value,\r\n      due: dueRef.current.textContent.slice(0, -1),\r\n      dueDate: dueDateRef.current.value,\r\n    };\r\n    console.log(formData);\r\n    let check = invoiceVerify(formData);\r\n    setIsFetching(true);\r\n    if (check.ok) {\r\n      const { status, message, dataPackage } = await handleRequests(\r\n        \"PUT\",\r\n        `https://csharpproject.somee.com/api/invoice/${params.invoiceId}`,\r\n        isAuth.jwt,\r\n        formData\r\n      );\r\n      setIsLoaded(false);\r\n      setIsFetching(false);\r\n      if (status === 200) {\r\n        setTimeout(() => {\r\n          toast.success(message, {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          });\r\n        }, 250);\r\n      } else {\r\n        setTimeout(() => {\r\n          toast.error(message, {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          });\r\n        }, 250);\r\n      }\r\n    } else {\r\n      setIsFetching(false);\r\n      const issues = Object.keys(check);\r\n      setTimeout(() => {\r\n        for (let issue of issues) {\r\n          if (issue !== \"ok\") {\r\n            toast.error(check[issue], {\r\n              position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n          }\r\n        }\r\n      }, 250);\r\n    }\r\n  };\r\n  const handleModif = async () => {\r\n    return;\r\n  };\r\n  const handleDelete = async () => {\r\n    setIsFetching(true);\r\n    const { status, message } = await handleRequests(\r\n      \"DELETE\",\r\n      `https://csharpproject.somee.com/api/Invoice/${invoice.id}`,\r\n      isAuth.jwt\r\n    );\r\n    setIsFetching(false);\r\n    if (status !== 200) {\r\n      toast.error(\"There was an error deleting this invoice\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n    sessionStorage.setItem(\"cogipToast\", \"Success !\");\r\n    setIsDeleting(false);\r\n    setIsLoaded(false);\r\n  };\r\n  const handleAmountChange = (e) => {\r\n    if (e.target.value < paidRef.current.value)\r\n      paidRef.current.value = e.target.value;\r\n    setNewDue(parseInt(e.target.value) - parseInt(paidRef.current.value));\r\n  };\r\n  const handlePaidChange = (e) => {\r\n    if (parseInt(amountRef.current.value) < parseInt(e.target.value)) {\r\n      e.target.value = amountRef.current.value;\r\n    }\r\n    setNewDue(parseInt(amountRef.current.value) - parseInt(e.target.value));\r\n  };\r\n  useEffect(() => {\r\n    setNewDue(null);\r\n  }, [isDeleting, isModifying]);\r\n  return (\r\n    <main>\r\n      {isFetching || !loaded || !invoice ? (\r\n        <div className=\"fetching\">\r\n          <div className=\"lds-dual-ring\"></div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"card\">\r\n          <h2>\r\n            {company.status === \"Supplier\"\r\n              ? \"Incoming bill \"\r\n              : \"Outgoing bill \"}\r\n            details\r\n          </h2>\r\n\r\n          {isModifying ? (\r\n            <form className=\"invoiceGrid\" onSubmit={submit}>\r\n              <fieldset className=\"invoiceGrid__section--ref\">\r\n                <div>\r\n                  <label htmlFor=\"reference\" className=\"labels\">\r\n                    Reference :{\" \"}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"reference\"\r\n                    id=\"reference\"\r\n                    defaultValue={invoice.reference}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"date\" className=\"labels\">\r\n                    Date :{\" \"}\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    id=\"date\"\r\n                    ref={receivedRef}\r\n                    defaultValue={`${year}-${month}-${day}`}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"dueDate\" className=\"labels\">\r\n                    Due date :{\" \"}\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"dueDate\"\r\n                    id=\"dueDate\"\r\n                    ref={dueDateRef}\r\n                    defaultValue={`${invoice.dueDate.slice(\r\n                      0,\r\n                      4\r\n                    )}-${invoice.dueDate.slice(5, 7)}-${invoice.dueDate.slice(\r\n                      8,\r\n                      10\r\n                    )}`}\r\n                    required\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"lowerBlock\">\r\n                <fieldset className=\"invoiceGrid__section--relations\">\r\n                  <legend>Company : </legend>\r\n                  <div className=\"company\">\r\n                    <CompanySelector\r\n                      companies={companies}\r\n                      handleCompanyChange={handleCompanyChange}\r\n                      currentCompany={company}\r\n                      className=\"company__value\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"labels\">Contact : </span>\r\n                    <ContactSelector\r\n                      contacts={contacts}\r\n                      currentContact={contact}\r\n                      currentCompany={company}\r\n                      selectedCompany={selectedCompany}\r\n                      handleContactChange={handleContactChange}\r\n                    />\r\n                  </div>\r\n                </fieldset>\r\n                <fieldset className=\"invoiceGrid__section--payment\">\r\n                  <legend>Total : </legend>\r\n                  <div className=\"total\">\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"amount\"\r\n                      ref={amountRef}\r\n                      id=\"amount\"\r\n                      defaultValue={invoice.amount}\r\n                      className=\"total__value\"\r\n                      onChange={handleAmountChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"paid\" className=\"labels\">\r\n                      Paid :{\" \"}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"paid\"\r\n                      id=\"paid\"\r\n                      defaultValue={invoice.paid}\r\n                      ref={paidRef}\r\n                      onChange={handlePaidChange}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"labels\">Due : </span>\r\n                    <span ref={dueRef}>\r\n                      {newDue !== null ? newDue : invoice.due}€\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"labels\">Paid status : </span>\r\n                    <span>{invoice.paidStatus ? \"Paid\" : \"To be paid\"}</span>\r\n                  </div>\r\n                </fieldset>\r\n                <section className=\"decoration\">\r\n                  <InvoiceIllustration />\r\n                </section>\r\n              </div>\r\n              <InvoiceControls\r\n                invoice={invoice.id}\r\n                isModifying={isModifying}\r\n                setIsModifying={setIsModifying}\r\n                isDeleting={isDeleting}\r\n                setIsDeleting={setIsDeleting}\r\n                originalCompany={company}\r\n                setSelectedCompany={setSelectedCompany}\r\n                originalContact={contact}\r\n                setSelectedContact={setSelectedContact}\r\n                handleModif={handleModif}\r\n                handleDelete={handleDelete}\r\n              />\r\n            </form>\r\n          ) : (\r\n            <div className=\"invoiceGrid\">\r\n              <section className=\"invoiceGrid__section--ref\">\r\n                <div>\r\n                  <span className=\"labels\">Reference : </span>\r\n                  <span id=\"invoiceReference\">{invoice.reference}</span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"labels\">Date : </span>\r\n                  <span id=\"invoiceReceived\">{`${day}-${month}-${year}`}</span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"labels\">Due date : </span>\r\n                  <span>{dateFormatter(invoice.dueDate)}</span>\r\n                </div>\r\n              </section>\r\n              <div className=\"lowerBlock\">\r\n                <section className=\"invoiceGrid__section--relations\">\r\n                  <h3>Company : </h3>\r\n                  <div className=\"company\">\r\n                    <span\r\n                      id=\"invoiceCompany\"\r\n                      onClick={() => {\r\n                        navigate(`/company/${company.id}`);\r\n                      }}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"company__value\"\r\n                    >\r\n                      {company.name}\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"labels\">Contact : </span>\r\n                    {contact ? (\r\n                      <span\r\n                        id=\"invoiceContact\"\r\n                        onClick={() => {\r\n                          navigate(`/contact/${contact.id}`);\r\n                        }}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >{`${contact.firstname} ${contact.lastname}`}</span>\r\n                    ) : (\r\n                      <span>None</span>\r\n                    )}\r\n                  </div>\r\n                </section>\r\n                <section className=\"invoiceGrid__section--payment\">\r\n                  <h3>Total : </h3>\r\n                  <div className=\"total\">\r\n                    <span id=\"invoiceAmout\" className=\"total__value\">\r\n                      {invoice.amount} €\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"labels\">Paid : </span>\r\n                    <span>{invoice.paid}€</span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"labels\">Due : </span>\r\n                    <span>{invoice.due}€</span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"labels\">Paid status : </span>\r\n                    <span>{invoice.paidStatus ? \"Paid\" : \"To be paid\"}</span>\r\n                  </div>\r\n                </section>\r\n                <section className=\"decoration\">\r\n                  <InvoiceIllustration />\r\n                </section>\r\n              </div>\r\n              {isAuth.role == \"Admin\" ? (\r\n                <InvoiceControls\r\n                  invoice={invoice.id}\r\n                  isModifying={isModifying}\r\n                  setIsModifying={setIsModifying}\r\n                  isDeleting={isDeleting}\r\n                  setIsDeleting={setIsDeleting}\r\n                  originalCompany={company}\r\n                  setSelectedCompany={setSelectedCompany}\r\n                  originalContact={contact}\r\n                  setSelectedContact={setSelectedContact}\r\n                  handleModif={handleModif}\r\n                  handleDelete={handleDelete}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <ToastContainer />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Invoice;\r\n","function InvoiceControls({\r\n  isModifying,\r\n  setIsModifying,\r\n  setSelectedCompany,\r\n  originalCompany,\r\n  isDeleting,\r\n  setIsDeleting,\r\n  originalContact,\r\n  setSelectedContact,\r\n  handleModif,\r\n  handleDelete,\r\n}) {\r\n  if (isModifying) {\r\n    return (\r\n      <div className={\"invoiceControls\"}>\r\n        <button onClick={handleModif}>Submit</button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setIsModifying(false);\r\n            setSelectedCompany(originalCompany);\r\n            setSelectedContact(originalContact);\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  if (isDeleting) {\r\n    return (\r\n      <div className={\"invoiceControls\"}>\r\n        <button type=\"button\" onClick={handleDelete}>\r\n          Confirm\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setIsDeleting(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={\"invoiceControls\"}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setIsModifying(true);\r\n        }}\r\n      >\r\n        Modify\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setIsDeleting(true);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InvoiceControls;\r\n","function CompanySelector({\r\n  companies,\r\n  handleCompanyChange,\r\n  currentCompany,\r\n  name,\r\n}) {\r\n  return (\r\n    <select\r\n      onChange={(e) => {\r\n        let company = companies.find((el) => el.name == e.target.value)\r\n          ? companies.find((el) => el.name == e.target.value)\r\n          : \"\";\r\n        handleCompanyChange(company);\r\n      }}\r\n      defaultValue={currentCompany.name}\r\n      name={name}\r\n      required\r\n    >\r\n      <option value=\"\">Select a company</option>\r\n      {companies.map((company) => {\r\n        return (\r\n          <option value={company.name} key={company.id}>\r\n            {company.name}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default CompanySelector;\r\n","const invoiceVerify = (dataToVerify) => {\r\n  let response = {};\r\n  if (!dataToVerify.reference) response.reference = \"Please enter a reference\";\r\n  if (!dataToVerify.company) response.company = \"Please select a company\";\r\n  if (!dataToVerify.amount) response.amount = \"Please enter an amount\";\r\n  if (!dataToVerify.received) response.received = \"Please select a date\";\r\n  if (dataToVerify.paidStatus !== false && dataToVerify.paidStatus !== true)\r\n    response.paid = \"Please select a paid status\";\r\n  response.ok = Object.keys(response).length > 0 ? false : true;\r\n  return response;\r\n};\r\nconst contactVerify = (dataToVerify) => {\r\n  let response = {};\r\n  if (!dataToVerify.firstname) response.firstname = \"Please enter a firstname\";\r\n  if (!dataToVerify.lastname) response.lastname = \"Please enter a lastname\";\r\n  if (!dataToVerify.companies) response.companies = \"Please select a contact\";\r\n  if (!dataToVerify.email) response.email = \"Please enter an email\";\r\n  if (!dataToVerify.phonenumber)\r\n    response.phonenumber = \"Please enter a phone number\";\r\n  response.ok = Object.keys(response).length > 0 ? false : true;\r\n  return response;\r\n};\r\n\r\nconst companyVerify = (dataToVerify) => {\r\n  let response = {};\r\n  if (!dataToVerify.name) response.name = \"Please enter a name\";\r\n  if (!dataToVerify.vat) response.vat = \"Please enter a vat number\";\r\n  if (!dataToVerify.town) response.town = \"Please enter a town\";\r\n  if (!dataToVerify.street) response.street = \"Please enter a street\";\r\n  if (!dataToVerify.streetnumber)\r\n    response.streetnumber = \"Please enter a street number\";\r\n  if (!dataToVerify.country) response.country = \"Please enter a country\";\r\n  if (!dataToVerify.status) response.status = \"Please select a status\";\r\n  response.ok = Object.keys(response).length > 0 ? false : true;\r\n  return response;\r\n};\r\n\r\nexport { invoiceVerify, contactVerify, companyVerify };\r\n","const dateFormatter = (dateInput) => {\r\n  const dateOutput = `${dateInput.slice(8, 10)}-${dateInput.slice(\r\n    5,\r\n    7\r\n  )}-${dateInput.slice(0, 4)}`;\r\n  return dateOutput;\r\n};\r\nexport { dateFormatter };\r\n"],"names":["$1ec4156a7929aedf$export$2e2bcd8739ae039","invoices","companies","contacts","setIsLoaded","isAuth","params","$kYfAi","useParams","navigate","useNavigate","loaded","length","invoice","find","el","id","invoiceId","company","contact","year","received","slice","month","day","isModifying","setIsModifying","$eCRxs","useState","isDeleting","setIsDeleting","selectedCompany","setSelectedCompany","selectedContact","setSelectedContact","isFetching","setIsFetching","newDue","setNewDue","useEffect","amountRef","useRef","receivedRef","paidRef","dueRef","dueDateRef","handleModif","async","handleDelete","status","message","$9aCo1","default","jwt","$dv2Dk","toast","error","position","POSITION","BOTTOM_RIGHT","sessionStorage","setItem","$7C6UD","jsxs","className","onSubmit","e","formData","reference","target","value","amount","toString","firstname","lastname","current","paidStatus","paid","due","textContent","dueDate","console","log","check","$5H5kc","invoiceVerify","ok","dataPackage","setTimeout","success","issues","Object","keys","issue","htmlFor","type","name","defaultValue","required","ref","$4yknE","handleCompanyChange","currentCompany","$eltSV","currentContact","handleContactChange","onChange","parseInt","$lb0XH","$enOpT","originalCompany","originalContact","$gXTmb","dateFormatter","onClick","style","cursor","jsx","role","ToastContainer","$e497f1a838d958a9$export$2e2bcd8739ae039","$27c888b5041dae3c$export$2e2bcd8739ae039","map","$42551951195d288c$export$7e6a64f84fea9213","dataToVerify","response","$42551951195d288c$export$9204046200024146","email","phonenumber","$42551951195d288c$export$927967c6383eee08","vat","town","street","streetnumber","country","$c59d18b9d58e05d0$export$406508d2ca449bd","dateInput"],"version":3,"file":"Invoice.858eb38a.js.map"}