{"mappings":"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","sources":["src/components/companies/Companies.jsx","src/logic/dateFormatter.js"],"sourcesContent":["import { useMemo, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTable, useSortBy, useFilters } from \"react-table\";\r\nimport SelectFilter from \"../reusables/SelectFilter\";\r\nimport { dateFormatter } from \"../../logic/dateFormatter\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nfunction Companies({ companies }) {\r\n  useEffect(() => {\r\n    const message = sessionStorage.getItem(\"cogipToast\");\r\n    if (!message) return;\r\n    toast.success(message, {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n    sessionStorage.removeItem(\"cogipToast\");\r\n  }, []);\r\n  const navigate = useNavigate();\r\n  const handleAdd = (e) => {\r\n    navigate(`/${e.target.id}`);\r\n  };\r\n\r\n  /* SETTING UP TABLE */\r\n  const data = useMemo(() => {\r\n    let results = [];\r\n    for (let company of companies) {\r\n      let obj = {\r\n        icon:\r\n          company.status == \"Supplier\" ? (\r\n            <i className=\"fas fa-parachute-box\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-shopping-basket\"></i>\r\n          ),\r\n        col1: company.name,\r\n        col2: company.status,\r\n        col3: company.vat,\r\n        col4: dateFormatter(company.added),\r\n        col5: company.country,\r\n        col6: company.zip.toString(),\r\n        id: company.id,\r\n      };\r\n      results.push(obj);\r\n    }\r\n    return results;\r\n  }, [companies]);\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"\",\r\n        accessor: \"icon\",\r\n        className: \"companyIcon\",\r\n        disableSortBy: true,\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"col1\",\r\n        className: \"companyName\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"col2\",\r\n        className: \"companyType\",\r\n        Filter: SelectFilter,\r\n        filter: \"includes\",\r\n      },\r\n      {\r\n        Header: \"VAT\",\r\n        accessor: \"col3\",\r\n        className: \"companyVat\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Added\",\r\n        accessor: \"col4\",\r\n        className: \"companyAdded\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"col5\",\r\n        className: \"companyCountry\",\r\n        Filter: SelectFilter,\r\n        filter: \"includes\",\r\n      },\r\n      {\r\n        Header: \"ZIP\",\r\n        accessor: \"col6\",\r\n        className: \"companyZIP\",\r\n        Filter: SelectFilter,\r\n        filter: \"includes\",\r\n      },\r\n      {\r\n        Header: \"ID\",\r\n        accessor: \"id\",\r\n        className: \"companyId\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    [companies]\r\n  );\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        initialState: {\r\n          sortBy: [{ id: \"col1\", desc: false }],\r\n          hiddenColumns: [\"id\"],\r\n        },\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"companies card\">\r\n        <h2>\r\n          Companies\r\n          <button\r\n            type=\"button\"\r\n            id=\"companyAdd\"\r\n            onClick={handleAdd}\r\n            style={{ padding: \"0 .5rem\" }}\r\n          >\r\n            +\r\n          </button>\r\n        </h2>\r\n\r\n        <table {...getTableProps()} className=\"table\">\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th\r\n                    {...column.getHeaderProps(\r\n                      column.getSortByToggleProps({\r\n                        className: column.className,\r\n                      })\r\n                    )}\r\n                  >\r\n                    <div className=\"thContainer\">\r\n                      {column.render(\"Header\")}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <i className=\"fas fa-arrow-alt-circle-up sorted\"></i>\r\n                          ) : (\r\n                            <i className=\"fas fa-arrow-alt-circle-down sorted\"></i>\r\n                          )\r\n                        ) : (\r\n                          <i className=\"fas fa-arrow-alt-circle-down unSorted\"></i>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr\r\n                {...headerGroup.getHeaderGroupProps()}\r\n                className={\"filtersRow\"}\r\n              >\r\n                {headerGroup.headers.map((column) => (\r\n                  <th\r\n                    key={column.id}\r\n                    {...column.getHeaderProps({\r\n                      className: column.className,\r\n                    })}\r\n                  >\r\n                    <div className=\"filterContainer\">\r\n                      {column.canFilter ? column.render(\"Filter\") : null}\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps({\r\n                          className: cell.column.className,\r\n                        })}\r\n                        onClick={\r\n                          cell.column.Header == \"Name\"\r\n                            ? () => {\r\n                                navigate(\r\n                                  `/company/${cell.row.allCells[7].value}`\r\n                                );\r\n                              }\r\n                            : () => {}\r\n                        }\r\n                      >\r\n                        {cell.render(\"Cell\")}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      <ToastContainer />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Companies;\r\n","const dateFormatter = (dateInput) => {\r\n  const dateOutput = `${dateInput.slice(8, 10)}-${dateInput.slice(\r\n    5,\r\n    7\r\n  )}-${dateInput.slice(0, 4)}`;\r\n  return dateOutput;\r\n};\r\nexport { dateFormatter };\r\n"],"names":["$af0442719a4d3177$export$2e2bcd8739ae039","companies","$eCRxs","useEffect","message","sessionStorage","getItem","$dv2Dk","toast","success","position","POSITION","BOTTOM_RIGHT","removeItem","navigate","$kYfAi","useNavigate","data","useMemo","results","company","obj","icon","status","$7C6UD","jsx","className","col1","name","col2","col3","vat","col4","$gXTmb","dateFormatter","added","col5","country","col6","zip","toString","id","push","columns","Header","accessor","disableSortBy","disableFilters","Filter","$bjE0N","default","filter","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","$3NGAg","useTable","initialState","sortBy","desc","hiddenColumns","useFilters","useSortBy","jsxs","type","onClick","e","target","style","padding","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","row","getRowProps","cells","cell","getCellProps","allCells","value","ToastContainer","$c59d18b9d58e05d0$export$406508d2ca449bd","dateInput","slice"],"version":3,"file":"Companies.a62cdc56.js.map"}