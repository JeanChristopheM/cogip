{"mappings":"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","sources":["src/components/settings/Settings.jsx","src/components/settings/SettingsMenu.jsx","src/components/settings/UsersSettings.jsx","src/components/settings/AccountSettings.jsx","src/components/settings/ThemeSettings.jsx","src/logic/hooks.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport SettingsMenu from \"./SettingsMenu.jsx\";\r\nimport UsersSettings from \"./UsersSettings.jsx\";\r\nimport AccountSettings from \"./AccountSettings.jsx\";\r\nimport ThemeSettings from \"./ThemeSettings.jsx\";\r\nconst Settings = ({ isAuth }) => {\r\n  const [selectedPage, setSelectedPage] = useState(0);\r\n  const choices = [\r\n    <UsersSettings isAuth={isAuth} />,\r\n    <AccountSettings isAuth={isAuth} />,\r\n    <ThemeSettings />,\r\n  ];\r\n  return (\r\n    <main>\r\n      <SettingsMenu setSelectedPage={setSelectedPage} isAuth={isAuth} />\r\n      {choices[selectedPage]}\r\n    </main>\r\n  );\r\n};\r\nexport default Settings;\r\n","import { useState, useRef, useLayoutEffect } from \"react\";\r\n\r\nconst SettingsMenu = ({ setSelectedPage, isAuth }) => {\r\n  const [active, setActive] = useState(() => {\r\n    return isAuth.role === \"Admin\" ? 0 : 1;\r\n  });\r\n  const [bgStyle, setBgStyle] = useState({\r\n    width: \"0px\",\r\n    transform: `translate(0px, 0px)`,\r\n  });\r\n\r\n  const firstLiRef = useRef();\r\n  const backgroundRef = useRef();\r\n  useLayoutEffect(() => {\r\n    setBgStyle({\r\n      width: document.getElementById(active).getBoundingClientRect().width,\r\n      transform: `translate(${\r\n        document.getElementById(active).getBoundingClientRect().x -\r\n        firstLiRef.current.getBoundingClientRect().x\r\n      }px, 0px)`,\r\n    });\r\n    setSelectedPage(active);\r\n  }, [active]);\r\n  const changeActive = (e) => {\r\n    const id = e.target.id;\r\n    setActive(id);\r\n  };\r\n  return (\r\n    <nav className={\"settingsSubmenu\"}>\r\n      {isAuth.role === \"Admin\" ? (\r\n        <ul>\r\n          <li\r\n            className={active == 0 ? \"active\" : null}\r\n            ref={firstLiRef}\r\n            id={\"0\"}\r\n            onClick={changeActive}\r\n          >\r\n            Users\r\n          </li>\r\n          <li\r\n            className={active == 1 ? \"active\" : null}\r\n            id={\"1\"}\r\n            onClick={changeActive}\r\n          >\r\n            Account\r\n          </li>\r\n          <li\r\n            className={active == 2 ? \"active\" : null}\r\n            id={\"2\"}\r\n            onClick={changeActive}\r\n          >\r\n            Theme\r\n          </li>\r\n          <li className={\"background\"} ref={backgroundRef} style={bgStyle}></li>\r\n        </ul>\r\n      ) : (\r\n        <ul>\r\n          <li\r\n            ref={firstLiRef}\r\n            className={active == 1 ? \"active\" : null}\r\n            id={\"1\"}\r\n            onClick={changeActive}\r\n          >\r\n            Account\r\n          </li>\r\n          <li\r\n            className={active == 2 ? \"active\" : null}\r\n            id={\"2\"}\r\n            onClick={changeActive}\r\n          >\r\n            Theme\r\n          </li>\r\n          <li className={\"background\"} ref={backgroundRef} style={bgStyle}></li>\r\n        </ul>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\nexport default SettingsMenu;\r\n","import handleRequests from \"../../logic/handleRequests\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UserPlaceholder = () => {\r\n  return (\r\n    <div className=\"userCard placeholder\">\r\n      <span className=\"imageContainer\">\r\n        <span className=\"img\"></span>\r\n      </span>\r\n      <span className=\"name\">a</span>\r\n      <span className=\"username\">a</span>\r\n      <span className=\"email\">a</span>\r\n      <span className=\"userType\">a</span>\r\n      <span className=\"options\"></span>\r\n    </div>\r\n  );\r\n};\r\nconst UsersSettings = ({ isAuth }) => {\r\n  const navigate = useNavigate();\r\n  const [users, setUsers] = useState([]);\r\n  const amountOfPlaceholders = [1, 2, 3, 4, 5];\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n  const getUsers = async () => {\r\n    const data = await handleRequests(\r\n      \"GET\",\r\n      \"https://csharpproject.somee.com/api/Auth/users\",\r\n      isAuth.jwt\r\n    );\r\n    setUsers(data.dataPackage);\r\n  };\r\n  const handleOptionsClick = (e) => {\r\n    console.log(e.target.parentNode.id);\r\n  };\r\n  const handleAdd = () => {\r\n    navigate(\"/userAdd\");\r\n  };\r\n  return (\r\n    <div className=\"settings__users\">\r\n      <div className=\"users card\">\r\n        <h2 className=\"settings__users--title\">\r\n          Users\r\n          <button\r\n            type=\"button\"\r\n            id=\"userAdd\"\r\n            onClick={handleAdd}\r\n            style={{ padding: \"0 .5rem\" }}\r\n          >\r\n            +\r\n          </button>\r\n        </h2>\r\n        <div className=\"usersContainer\">\r\n          {users.length === 0\r\n            ? amountOfPlaceholders.map((placeholder) => (\r\n                <UserPlaceholder key={placeholder} />\r\n              ))\r\n            : users.map((user, index) => {\r\n                const colors = (index) => {\r\n                  let colorIndex = index % 4;\r\n                  let colorArray = [\"#61C9A8\", \"#ED9B40\", \"#BA3B46\", \"#508991\"];\r\n                  return colorArray[colorIndex];\r\n                };\r\n                return (\r\n                  <div key={user.id} id={user.id} className=\"userCard\">\r\n                    <figure className=\"imageContainer\">\r\n                      <div\r\n                        className=\"img\"\r\n                        style={{ backgroundColor: colors(index) }}\r\n                      >\r\n                        <span className=\"img--text\">\r\n                          {/* user.firstname.slice(0, 1).toUpperCase() */ \"F\"}\r\n                          {/* user.lastname.slice(0, 1).toUpperCase() */ \"L\"}\r\n                        </span>\r\n                      </div>\r\n                    </figure>\r\n                    <span className=\"name\">\r\n                      {\"Firstname\"} {\"Lastname\"}\r\n                    </span>\r\n                    <span className=\"username\">@{user.userName}</span>\r\n                    <span className=\"email\">{user.email}</span>\r\n                    <span className=\"userType\">{user.userType}</span>\r\n                    <i\r\n                      className=\"fas fa-ellipsis-v options\"\r\n                      onClick={handleOptionsClick}\r\n                    ></i>\r\n                  </div>\r\n                );\r\n              })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default UsersSettings;\r\n","const AccountSettings = ({ isAuth }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>You : </h2>\r\n      <br />\r\n      <p>Username : {isAuth.name}</p>\r\n      <p>Role : {isAuth.role}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default AccountSettings;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocalState } from \"../../logic/hooks\";\r\nimport { themes, switchTheme } from \"../../logic/theme\";\r\n\r\nconst ThemeSettings = () => {\r\n  const [currentTheme, setCurrentTheme] = useLocalState(\r\n    \"cogipTheme\",\r\n    themes.original\r\n  );\r\n  const handleClick = (e) => {\r\n    const target = e.target;\r\n    setCurrentTheme(themes[target.id]);\r\n  };\r\n  useEffect(() => {\r\n    switchTheme(currentTheme);\r\n  }, [currentTheme]);\r\n  return (\r\n    <div className=\"settings__themes card\">\r\n      <h2 className=\"settings__themes--title\">Theme settings</h2>\r\n      <div className=\"themeContainer\">\r\n        <div\r\n          className=\"themeCard\"\r\n          id=\"original\"\r\n          onClick={handleClick}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Original :\r\n          <div className=\"themeCard__colors\">\r\n            <div className=\"primary\">\r\n              <h3>Title</h3>\r\n              <p>Text</p>\r\n              <p id=\"lighterText\">Lighter Text</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"themeCard\"\r\n          id=\"dark\"\r\n          onClick={handleClick}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Dark :\r\n          <div className=\"themeCard__colors\">\r\n            <div className=\"primary\">\r\n              <h3>Title</h3>\r\n              <p>Text</p>\r\n              <p id=\"lighterText\">Lighter Text</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"themeCard\"\r\n          id=\"salmon\"\r\n          onClick={handleClick}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Salmon :\r\n          <div className=\"themeCard__colors\">\r\n            <div className=\"primary\">\r\n              <h3>Title</h3>\r\n              <p>Text</p>\r\n              <p id=\"lighterText\">Lighter Text</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"themeCard\"\r\n          id=\"forest\"\r\n          onClick={handleClick}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Forest :\r\n          <div className=\"themeCard__colors\">\r\n            <div className=\"primary\">\r\n              <h3>Title</h3>\r\n              <p>Text</p>\r\n              <p id=\"lighterText\">Lighter Text</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ThemeSettings;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useLocalState = (key, initialValue) => {\r\n  const saved = localStorage.getItem(key);\r\n  const value = saved ? JSON.parse(saved) : null;\r\n  const [theme, setTheme] = useState(value || initialValue);\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(theme));\r\n  }, [key, theme]);\r\n  return [theme, setTheme];\r\n};\r\nexport { useLocalState };\r\n"],"names":["$86e11851daacce71$export$2e2bcd8739ae039","isAuth","selectedPage","setSelectedPage","$eCRxs","useState","choices","$9TyyI","default","$9Gf2w","$i0lCb","$7C6UD","jsxs","$fH21S","$a6adc737ca745c91$export$2e2bcd8739ae039","active","setActive","role","bgStyle","setBgStyle","width","transform","firstLiRef","useRef","backgroundRef","useLayoutEffect","document","getElementById","getBoundingClientRect","x","current","changeActive","e","id","target","jsx","className","ref","onClick","style","$cc69bb54d36b74d8$var$UserPlaceholder","$cc69bb54d36b74d8$export$2e2bcd8739ae039","navigate","$kYfAi","useNavigate","users","setUsers","useEffect","getUsers","async","data","$9aCo1","jwt","dataPackage","handleOptionsClick","console","log","parentNode","type","padding","length","map","placeholder","user","index1","backgroundColor","index","userName","email","userType","$34fa347b54186f73$export$2e2bcd8739ae039","name","$249c405b396a8a70$export$2e2bcd8739ae039","currentTheme","setCurrentTheme","$g9PIs","useLocalState","$34kEx","themes","original","handleClick","switchTheme","cursor","$bc359a5a3cf7f4dd$export$e4a07dee2868ff9d","key","initialValue","saved","localStorage","getItem","value","JSON","parse","theme","setTheme","setItem","stringify"],"version":3,"file":"Settings.2f5631d4.js.map"}