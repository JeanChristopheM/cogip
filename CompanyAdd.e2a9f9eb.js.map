{"mappings":"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","sources":["src/components/companies/CompanyAdd.jsx","src/logic/formValidation.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport handleRequests from \"../../logic/handleRequests\";\r\nimport { companyVerify } from \"../../logic/formValidation\";\r\n\r\n// toaster\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CompanyIllustration from \"../reusables/CompanyIllustration\";\r\n// end toaster\r\n\r\nfunction CompanyAdd({ setIsLoaded, isAuth }) {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  useEffect(() => {\r\n    const message = sessionStorage.getItem(\"cogipToast\");\r\n    if (!message) return;\r\n    const messageArray = message.split(\",\");\r\n    toast[messageArray[0]](messageArray[1], {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n    sessionStorage.removeItem(\"cogipToast\");\r\n  }, [isFetching]);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsFetching(true);\r\n    const formData = {\r\n      country: e.target.country.value,\r\n      name: e.target.name.value,\r\n      status: e.target.status.value,\r\n      street: e.target.street.value,\r\n      streetnumber: e.target.streetnumber.value,\r\n      town: e.target.town.value,\r\n      vat: e.target.vat.value,\r\n      zip: e.target.zip.value,\r\n      contacts: [],\r\n    };\r\n    let check = companyVerify(formData);\r\n    if (check.ok) {\r\n      const { status, message, dataPackage } = await handleRequests(\r\n        \"POST\",\r\n        \"https://csharpproject.somee.com/api/Company\",\r\n        isAuth.jwt,\r\n        formData\r\n      );\r\n      if (status === 200)\r\n        sessionStorage.setItem(\"cogipToast\", \"success,Success !\");\r\n      else sessionStorage.setItem(\"cogipToast\", `error,${message}`);\r\n      setTimeout(() => {\r\n        setIsLoaded(false);\r\n        setIsFetching(false);\r\n      }, 1000);\r\n    } else {\r\n      setIsFetching(false);\r\n      const issues = Object.keys(check);\r\n      setTimeout(() => {\r\n        for (let issue of issues) {\r\n          if (issue !== \"ok\") {\r\n            toast.error(check[issue], {\r\n              position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n          }\r\n        }\r\n      }, 250);\r\n    }\r\n  };\r\n  return (\r\n    <main>\r\n      <div className=\"companyAdd card\">\r\n        <h2>Fill up the form</h2>\r\n        <form className=\"companyForm\" onSubmit={handleSubmit}>\r\n          <div className=\"formContent\">\r\n            <fieldset>\r\n              <legend>Company details</legend>\r\n              <div>\r\n                <label htmlFor=\"name\">Name : </label>\r\n                <input\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Ex : BeCode\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"vat\">VAT : </label>\r\n                <input\r\n                  name=\"vat\"\r\n                  type=\"text\"\r\n                  placeholder=\"Ex : 1235431658\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"status\">Status : </label>\r\n                <select name=\"status\" required>\r\n                  <option value=\"\">Select a status</option>\r\n                  <option value=\"Supplier\">Supplier</option>\r\n                  <option value=\"Customer\">Customer</option>\r\n                </select>\r\n              </div>\r\n            </fieldset>\r\n            <fieldset>\r\n              <legend>Address</legend>\r\n              <div>\r\n                <label htmlFor=\"streetnumber\">Streetnumber : </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"streetnumber\"\r\n                  id=\"streetnumber\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"street\">Street : </label>\r\n                <input type=\"text\" name=\"street\" id=\"street\" required />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"town\">Town : </label>\r\n                <input type=\"text\" name=\"town\" id=\"town\" required />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"country\">Country : </label>\r\n                <input type=\"text\" name=\"country\" id=\"country\" required />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"zip\">Zip : </label>\r\n                <input type=\"text\" name=\"zip\" id=\"zip\" />\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n          <button>Submit</button>\r\n        </form>\r\n        <div className=\"formIllu\">\r\n          <CompanyIllustration />\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n      {isFetching ? (\r\n        <div className=\"fetching dark\">\r\n          <div className=\"lds-dual-ring\"></div>\r\n        </div>\r\n      ) : null}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default CompanyAdd;\r\n","const invoiceVerify = (dataToVerify) => {\r\n  let response = {};\r\n  if (!dataToVerify.reference) response.reference = \"Please enter a reference\";\r\n  if (!dataToVerify.company) response.company = \"Please select a company\";\r\n  if (!dataToVerify.amount) response.amount = \"Please enter an amount\";\r\n  if (!dataToVerify.received) response.received = \"Please select a date\";\r\n  if (dataToVerify.paidStatus !== false && dataToVerify.paidStatus !== true)\r\n    response.paid = \"Please select a paid status\";\r\n  response.ok = Object.keys(response).length > 0 ? false : true;\r\n  return response;\r\n};\r\nconst contactVerify = (dataToVerify) => {\r\n  let response = {};\r\n  if (!dataToVerify.firstname) response.firstname = \"Please enter a firstname\";\r\n  if (!dataToVerify.lastname) response.lastname = \"Please enter a lastname\";\r\n  if (!dataToVerify.companies) response.companies = \"Please select a contact\";\r\n  if (!dataToVerify.email) response.email = \"Please enter an email\";\r\n  if (!dataToVerify.phonenumber)\r\n    response.phonenumber = \"Please enter a phone number\";\r\n  response.ok = Object.keys(response).length > 0 ? false : true;\r\n  return response;\r\n};\r\n\r\nconst companyVerify = (dataToVerify) => {\r\n  let response = {};\r\n  if (!dataToVerify.name) response.name = \"Please enter a name\";\r\n  if (!dataToVerify.vat) response.vat = \"Please enter a vat number\";\r\n  if (!dataToVerify.town) response.town = \"Please enter a town\";\r\n  if (!dataToVerify.street) response.street = \"Please enter a street\";\r\n  if (!dataToVerify.streetnumber)\r\n    response.streetnumber = \"Please enter a street number\";\r\n  if (!dataToVerify.country) response.country = \"Please enter a country\";\r\n  if (!dataToVerify.status) response.status = \"Please select a status\";\r\n  response.ok = Object.keys(response).length > 0 ? false : true;\r\n  return response;\r\n};\r\n\r\nexport { invoiceVerify, contactVerify, companyVerify };\r\n"],"names":["$18dd121f13565d87$export$2e2bcd8739ae039","setIsLoaded","isAuth","isFetching","setIsFetching","$eCRxs","useState","useEffect","message","sessionStorage","getItem","messageArray","split","$dv2Dk","toast","position","POSITION","BOTTOM_RIGHT","removeItem","$7C6UD","jsxs","className","onSubmit","async","e","preventDefault","formData","country","target","value","name","status","street","streetnumber","town","vat","zip","contacts","check","$5H5kc","companyVerify","ok","dataPackage","$9aCo1","default","jwt","setItem","setTimeout","issues","Object","keys","issue","error","htmlFor","type","placeholder","required","id","$6P85y","ToastContainer","jsx","$42551951195d288c$export$7e6a64f84fea9213","dataToVerify","response","reference","company","amount","received","paidStatus","paid","length","$42551951195d288c$export$9204046200024146","firstname","lastname","companies","email","phonenumber","$42551951195d288c$export$927967c6383eee08"],"version":3,"file":"CompanyAdd.e2a9f9eb.js.map"}