{"mappings":"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","sources":["src/components/dashboard/Homepage.jsx","src/components/reusables/Chart.jsx","src/components/dashboard/LastFiveInvoices.jsx","src/components/reusables/InvoiceLi.jsx","src/logic/dateFormatter.js","src/components/dashboard/LastFiveContacts.jsx","src/components/reusables/ContactLi.jsx","src/components/dashboard/LastFiveCompanies.jsx","src/components/reusables/CompanyLi.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Chart from \"../reusables/Chart.jsx\";\r\nimport LastFiveInvoices from \"./LastFiveInvoices.jsx\";\r\nimport LastFiveContacts from \"./LastFiveContacts.jsx\";\r\nimport LastFiveCompanies from \"./LastFiveCompanies.jsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Homepage({ companies, invoices, contacts, setPage, setInvoiceId }) {\r\n  const navigate = useNavigate();\r\n  const handleAdd = (e) => {\r\n    navigate(`/${e.target.id}`);\r\n  };\r\n\r\n  /* Sorting data to get 5 latest addition */\r\n  invoices.sort((a, b) => {\r\n    return new Date(b.received) - new Date(a.received);\r\n  });\r\n  contacts.sort((a, b) => {\r\n    return new Date(b.added) - new Date(a.added);\r\n  });\r\n  companies.sort((a, b) => {\r\n    return new Date(b.added) - new Date(a.added);\r\n  });\r\n\r\n  return (\r\n    <main className=\"homepage\">\r\n      <LastFiveInvoices\r\n        handleAdd={handleAdd}\r\n        navigate={navigate}\r\n        invoices={invoices}\r\n        companies={companies}\r\n        setPage={setPage}\r\n        setInvoiceId={setInvoiceId}\r\n      />\r\n      <LastFiveContacts\r\n        handleAdd={handleAdd}\r\n        navigate={navigate}\r\n        contacts={contacts}\r\n        companies={companies}\r\n      />\r\n      <LastFiveCompanies\r\n        handleAdd={handleAdd}\r\n        navigate={navigate}\r\n        companies={companies}\r\n      />\r\n\r\n      <section className=\"chart card\">\r\n        <h2>Payement Status</h2>\r\n        <div className=\"canvasContainer\">\r\n          {invoices.length > 0 ? (\r\n            <Chart invoices={invoices} />\r\n          ) : (\r\n            <div className=\"spinner-centerer\">\r\n              <div className=\"lds-dual-ring\"></div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst Chart = ({ invoices }) => {\r\n  let paid, unpaid;\r\n  if (invoices.length > 0) {\r\n    paid = invoices.reduce((tally, invoice) => {\r\n      if (invoice.paidStatus) return tally + 1;\r\n      return tally;\r\n    }, 0);\r\n    unpaid = invoices.reduce((tally, invoice) => {\r\n      if (!invoice.paidStatus) return tally + 1;\r\n      return tally;\r\n    }, 0);\r\n  }\r\n  const primaryColor =\r\n    document.documentElement.style.getPropertyValue(\"--clr-text\") || \"#274c77\";\r\n  const secondaryColor =\r\n    document.documentElement.style.getPropertyValue(\"--clr-text-low\") ||\r\n    \"#879cb3\";\r\n  const data = {\r\n    labels: [\"Paid\", \"Unpaid\"],\r\n    datasets: [\r\n      {\r\n        label: \"My First Dataset\",\r\n        data: [paid, unpaid],\r\n        backgroundColor: [primaryColor, secondaryColor],\r\n        hoverOffset: 4,\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n  };\r\n  return <Pie options={options} data={data} />;\r\n};\r\n\r\nexport default Chart;\r\n","import InvoiceLi from \"../reusables/InvoiceLi.jsx\";\r\nconst LastFiveInvoices = ({\r\n  handleAdd,\r\n  navigate,\r\n  invoices,\r\n  companies,\r\n  setPage,\r\n  setInvoiceId,\r\n}) => {\r\n  return (\r\n    <section className=\"invoices card\">\r\n      <h2>\r\n        <span\r\n          onClick={() => {\r\n            navigate(\"/invoices\");\r\n          }}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Last 5 invoices\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          id=\"invoiceAdd\"\r\n          onClick={handleAdd}\r\n          style={{ padding: \"0 .5rem\" }}\r\n        >\r\n          +\r\n        </button>\r\n      </h2>\r\n      <ul>\r\n        {invoices.length > 0 ? (\r\n          invoices.slice(0, 5).map((entry) => {\r\n            return (\r\n              <InvoiceLi\r\n                invoice={entry}\r\n                key={entry.id}\r\n                companies={companies}\r\n                setPage={setPage}\r\n                setInvoiceId={setInvoiceId}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <li>\r\n            <div className=\"spinner-centerer\">\r\n              <div className=\"lds-dual-ring\"></div>\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\nexport default LastFiveInvoices;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { dateFormatter } from \"../../logic/dateFormatter\";\r\n\r\nfunction InvoiceLi({ invoice, companies }) {\r\n  let navigate = useNavigate();\r\n  let company = companies.find((company) => company.id === invoice.company);\r\n  let arrow = company.status === \"Customer\" ? \"down\" : \"up\";\r\n  return (\r\n    <li className={\"invoiceLi\"}>\r\n      <span className=\"svg\">\r\n        <i className={`fas fa-arrow-${arrow}`}></i>\r\n      </span>\r\n      <span\r\n        className=\"invoiceName\"\r\n        onClick={() => {\r\n          navigate(`/company/${company.id}`);\r\n        }}\r\n      >\r\n        {company.name}\r\n      </span>\r\n      <span\r\n        className=\"invoiceNumber\"\r\n        onClick={() => {\r\n          navigate(`/invoice/${invoice.id}`);\r\n        }}\r\n      >\r\n        {invoice.reference}\r\n      </span>\r\n      <span className=\"invoiceType\">{company.status}</span>\r\n      <span className=\"invoiceDate\">{dateFormatter(invoice.received)}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default InvoiceLi;\r\n","const dateFormatter = (dateInput) => {\r\n  const dateOutput = `${dateInput.slice(8, 10)}-${dateInput.slice(\r\n    5,\r\n    7\r\n  )}-${dateInput.slice(0, 4)}`;\r\n  return dateOutput;\r\n};\r\nexport { dateFormatter };\r\n","import ContactLi from \"../reusables/ContactLi.jsx\";\r\nconst LastFiveContacts = ({ handleAdd, navigate, contacts, companies }) => {\r\n  return (\r\n    <section className=\"contacts card\">\r\n      <h2>\r\n        <span\r\n          onClick={() => {\r\n            navigate(\"/contacts\");\r\n          }}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Last 5 contacts\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          id=\"contactAdd\"\r\n          onClick={handleAdd}\r\n          style={{ padding: \"0 .5rem\" }}\r\n        >\r\n          +\r\n        </button>\r\n      </h2>\r\n      <ul>\r\n        {contacts.length > 0 ? (\r\n          contacts.slice(0, 5).map((entry) => {\r\n            return (\r\n              <ContactLi contact={entry} key={entry.id} companies={companies} />\r\n            );\r\n          })\r\n        ) : (\r\n          <li>\r\n            <div className=\"spinner-centerer\">\r\n              <div className=\"lds-dual-ring\"></div>\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LastFiveContacts;\r\n","import { useNavigate } from \"react-router-dom\";\r\n\r\nfunction ContactLi({ contact, companies }) {\r\n  const navigate = useNavigate();\r\n  /* let company = companies.find(\r\n    (company) => company.id == contact.contactcompany \r\n  ); */\r\n  let company =\r\n    contact.companies.length === 0\r\n      ? \"No company yet\"\r\n      : contact.companies.length === 1\r\n      ? companies.find((el) => el.id === contact.companies[0])\r\n      : \"Multiple\";\r\n  return (\r\n    <li>\r\n      <span className=\"svg\">\r\n        <i className=\"fas fa-user\"></i>\r\n      </span>\r\n      <span\r\n        className=\"contactName\"\r\n        onClick={() => {\r\n          navigate(`/contact/${contact.id}`);\r\n        }}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {contact.firstname + \" \" + contact.lastname}\r\n      </span>\r\n      <span className=\"contactMail\">{contact.email}</span>\r\n      {typeof company === \"string\" ? (\r\n        <span\r\n          className=\"contactCompany\"\r\n          style={{ color: \"var(--clr-text-low)\" }}\r\n        >\r\n          {company}\r\n        </span>\r\n      ) : (\r\n        <span\r\n          className=\"contactCompany\"\r\n          onClick={() => {\r\n            navigate(`/company/${company.id}`);\r\n          }}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          {company.name}\r\n        </span>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactLi;\r\n","import CompanyLi from \"../reusables/CompanyLi.jsx\";\r\n\r\nconst LastFiveCompanies = ({ handleAdd, navigate, companies }) => {\r\n  return (\r\n    <section className=\"companies card\">\r\n      <h2>\r\n        <span\r\n          onClick={() => {\r\n            navigate(\"/companies\");\r\n          }}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Last 5 companies\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          id=\"companyAdd\"\r\n          onClick={handleAdd}\r\n          style={{ padding: \"0 .5rem\" }}\r\n        >\r\n          +\r\n        </button>\r\n      </h2>\r\n      <ul>\r\n        {companies.length > 0 ? (\r\n          companies.slice(0, 5).map((entry) => {\r\n            return <CompanyLi company={entry} key={entry.id} />;\r\n          })\r\n        ) : (\r\n          <li>\r\n            <div className=\"spinner-centerer\">\r\n              <div className=\"lds-dual-ring\"></div>\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LastFiveCompanies;\r\n","import { useNavigate } from \"react-router-dom\";\r\n\r\nfunction CompanyLi({ company }) {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <li>\r\n      <span className=\"svg\">\r\n        <i className=\"fas fa-building\"></i>\r\n      </span>\r\n      <span\r\n        className=\"companyName\"\r\n        onClick={() => {\r\n          navigate(`/company/${company.id}`);\r\n        }}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {company.name}\r\n      </span>\r\n      <span className=\"companyType\">{company.status}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CompanyLi;\r\n"],"names":["$f2ad51572b81bdce$export$2e2bcd8739ae039","companies","invoices","contacts","setPage","setInvoiceId","navigate","$kYfAi","useNavigate","handleAdd","e","target","id","sort","a","b","Date","received","added","$7C6UD","jsxs","className","$54oWH","default","$h9QKB","$h0M1q","length","jsx","$h0V2j","$3jKM1","Chart","register","ArcElement","Tooltip","Legend","$f1fd8872f904167a$export$2e2bcd8739ae039","paid","unpaid","reduce","tally","invoice","paidStatus","data","labels","datasets","label","backgroundColor","document","documentElement","style","getPropertyValue","hoverOffset","$5MDbd","Pie","options","responsive","maintainAspectRatio","$bc802b97cd572967$export$2e2bcd8739ae039","onClick","cursor","type","padding","slice","map","entry","$6KSGF","$101381ed84330fe6$export$2e2bcd8739ae039","company1","find","company","arrow","status","name","reference","$gXTmb","dateFormatter","$c59d18b9d58e05d0$export$406508d2ca449bd","dateInput","$8803544bb72d6421$export$2e2bcd8739ae039","$6Owxp","contact","el","children","email","$eec2c1583b310d92$export$2e2bcd8739ae039","$6ZAgw","$050c7473682d57ea$export$2e2bcd8739ae039"],"version":3,"file":"Homepage.c16f6659.js.map"}