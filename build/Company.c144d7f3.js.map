{"mappings":"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","sources":["src/components/companies/Company.jsx","src/logic/formValidation.js","src/components/companies/CompanyControls.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { companyVerify } from \"../../logic/formValidation.js\";\nimport handleRequests from \"../../logic/handleRequests\";\nimport CompanyControls from \"./CompanyControls.jsx\";\n\n// toaster\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// end toaster\n\nfunction Company({ companies, contacts, setIsLoaded, isAuth }) {\n  const loaded = companies.length > 0 ? true : false;\n  const params = useParams();\n  const navigate = useNavigate();\n  const company = companies.find((el) => el.id == params.companyId);\n  const [isModifying, setIsModifying] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    if (!company) navigate(\"/companies\");\n  }, [companies]);\n  const nameRef = useRef();\n  const vatRef = useRef();\n  const statusRef = useRef();\n\n  const handleModif = async () => {\n    const formData = {\n      name: nameRef.current.value,\n      vat: vatRef.current.value,\n      status: statusRef.current.value,\n    };\n    let check = companyVerify(formData);\n    setIsFetching(true);\n    if (check.ok) {\n      const { status, message, dataPackage } = await handleRequests(\n        \"PUT\",\n        `https://csharpproject.somee.com/api/company/${params.companyId}`,\n        isAuth.jwt,\n        formData\n      );\n      setIsLoaded(false);\n      setIsFetching(false);\n      if (status === 200) {\n        setTimeout(() => {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        }, 250);\n      } else {\n        setTimeout(() => {\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        }, 250);\n      }\n    } else {\n      setIsFetching(false);\n      const issues = Object.keys(check);\n      setTimeout(() => {\n        for (let issue of issues) {\n          if (issue !== \"ok\") {\n            toast.error(check[issue], {\n              position: toast.POSITION.BOTTOM_RIGHT,\n            });\n          }\n        }\n      }, 250);\n    }\n  };\n  const handleDelete = async () => {\n    setIsFetching(true);\n    const { status, message } = await handleRequests(\n      \"DELETE\",\n      `https://csharpproject.somee.com/api/Company/${company.id}`,\n      isAuth.jwt\n    );\n    setIsFetching(false);\n    if (status !== 200) {\n      toast.error(\"There was an error deleting this company\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    }\n    sessionStorage.setItem(\"cogipToast\", \"Success !\");\n    setIsDeleting(false);\n    setIsLoaded(false);\n  };\n\n  return (\n    <main>\n      {isFetching || !loaded || !company ? (\n        <div className=\"fetching\">\n          <div className=\"lds-dual-ring\"></div>\n        </div>\n      ) : (\n        <div className=\"card\">\n          <h2>Details about {company.name}</h2>\n          <div className=\"companyGrid\">\n            <span>Name : </span>\n            {isModifying ? (\n              <input\n                type=\"text\"\n                name=\"companyName\"\n                defaultValue={company.name}\n                ref={nameRef}\n                required\n              />\n            ) : (\n              <span id=\"companyName\">{company.name}</span>\n            )}\n            <span>VAT : </span>\n            {isModifying ? (\n              <input\n                type=\"text\"\n                name=\"companyVat\"\n                defaultValue={company.vat}\n                ref={vatRef}\n                required\n              />\n            ) : (\n              <span id=\"companyVat\">{company.vat}</span>\n            )}\n            <span>Status : </span>\n            {isModifying ? (\n              <select\n                name=\"companyStatus\"\n                ref={statusRef}\n                defaultValue={company.status}\n                required\n              >\n                <option value=\"\">Select a status</option>\n                <option value=\"Supplier\">Supplier</option>\n                <option value=\"Client\">Client</option>\n              </select>\n            ) : (\n              <span id=\"companyStatus\">{company.status}</span>\n            )}\n            <span>___</span>\n            <span>___</span>\n            <span>Contacts : </span>\n            <ul>\n              {contacts.map((el) => {\n                if (el.contactcompany == company.id) {\n                  return (\n                    <li\n                      key={el.id}\n                      onClick={() => {\n                        navigate(`/contact/${el.id}`);\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >{`${el.firstname} ${el.lastname}`}</li>\n                  );\n                }\n              })}\n            </ul>\n          </div>\n          {isAuth.role == \"Admin\" ? (\n            <CompanyControls\n              isModifying={isModifying}\n              isDeleting={isDeleting}\n              setIsDeleting={setIsDeleting}\n              setIsModifying={setIsModifying}\n              handleModif={handleModif}\n              handleDelete={handleDelete}\n              company={company}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n      <ToastContainer />\n    </main>\n  );\n}\n\nexport default Company;\n","const invoiceVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.reference) response.reference = \"Please enter a reference\";\n  if (!dataToVerify.company) response.company = \"Please select a company\";\n  if (!dataToVerify.amount) response.amount = \"Please enter an amount\";\n  if (!dataToVerify.contact) response.contact = \"Please select a contact\";\n  if (!dataToVerify.received) response.received = \"Please select a date\";\n  if (dataToVerify.paid !== false && dataToVerify.paid !== true)\n    response.paid = \"Please select a paid status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\nconst contactVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.firstname) response.firstname = \"Please enter a firstname\";\n  if (!dataToVerify.lastname) response.lastname = \"Please enter a lastname\";\n  if (!dataToVerify.contactcompany)\n    response.contactcompany = \"Please select a contact\";\n  if (!dataToVerify.email) response.email = \"Please enter an email\";\n  if (!dataToVerify.phonenumber)\n    response.phonenumber = \"Please enter a phone number\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nconst companyVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.name) response.name = \"Please enter a name\";\n  if (!dataToVerify.vat) response.vat = \"Please enter a vat number\";\n  if (!dataToVerify.status) response.status = \"Please select a status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nexport { invoiceVerify, contactVerify, companyVerify };\n","function CompanyControls({\n  isModifying,\n  isDeleting,\n  setIsModifying,\n  setIsDeleting,\n  handleModif,\n  handleDelete,\n}) {\n  if (isModifying) {\n    return (\n      <div className={\"companyControls\"}>\n        <button type=\"button\" onClick={handleModif}>\n          Submit\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsModifying(false);\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n  if (isDeleting) {\n    return (\n      <div className={\"companyControls\"}>\n        <button type=\"button\" onClick={handleDelete}>\n          Confirm\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsDeleting(false);\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n  return (\n    <div className={\"companyControls\"}>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsModifying(true);\n        }}\n      >\n        Modify\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsDeleting(true);\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default CompanyControls;\n"],"names":["$f04eb1098caf910f$export$2e2bcd8739ae039","companies","contacts","setIsLoaded","isAuth","loaded","length","params","$kYfAi","useParams","navigate","useNavigate","company","find","el","id","companyId","isModifying","setIsModifying","$eCRxs","useState","isDeleting","setIsDeleting","isFetching","setIsFetching","useEffect","nameRef","useRef","vatRef","statusRef","$7C6UD","jsxs","className","name","jsx","type","defaultValue","ref","required","vat","status","value","map","contactcompany","onClick","style","cursor","firstname","lastname","role","$llL4i","default","handleModif","async","formData","current","check","$5H5kc","companyVerify","ok","message","dataPackage","$9aCo1","jwt","setTimeout","$dv2Dk","toast","success","position","POSITION","BOTTOM_RIGHT","error","issues","Object","keys","issue","handleDelete","sessionStorage","setItem","ToastContainer","$42551951195d288c$export$7e6a64f84fea9213","dataToVerify","response","reference","amount","contact","received","paid","$42551951195d288c$export$9204046200024146","email","phonenumber","$42551951195d288c$export$927967c6383eee08","$c98cd60c332eeee9$export$2e2bcd8739ae039"],"version":3,"file":"Company.c144d7f3.js.map"}