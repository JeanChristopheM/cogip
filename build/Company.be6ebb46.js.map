{"mappings":"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","sources":["src/components/companies/Company.jsx","src/logic/formValidation.js","src/components/companies/CompanyControls.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { companyVerify } from \"../../logic/formValidation.js\";\nimport ContactSelector from \"../reusables/ContactSelector.jsx\";\nimport handleRequests from \"../../logic/handleRequests\";\nimport CompanyControls from \"./CompanyControls.jsx\";\nimport CompanyIllustration from \"../reusables/CompanyIllustration.jsx\";\n\n// toaster\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// end toaster\n\nfunction Company({ companies, contacts, setIsLoaded, isAuth }) {\n  const loaded = companies.length > 0 ? true : false;\n  const params = useParams();\n  const navigate = useNavigate();\n  const company = companies.find((el) => el.id == params.companyId);\n  const [isModifying, setIsModifying] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const [selectorAmount, setSelectorAmount] = useState(company.contacts.length);\n\n  useEffect(() => {\n    if (!company) navigate(\"/companies\");\n  }, [companies]);\n  //! added a contact in a company and it removed the previous one\n  //! tried updating an invoice and got error 400 (bad request)\n  //! Fix illustration on user add page\n  const renderSelector = (amount) => {\n    let selectorArray = [];\n    for (let x = 0; x < amount; x++) {\n      const contact =\n        company.contacts.length > 0 &&\n        contacts.filter((el) => company.contacts.includes(el.id))[x]\n          ? contacts.filter((el) => company.contacts.includes(el.id))[x]\n          : \"\";\n      selectorArray.push(\n        <div className=\"contactGrid__section--child selectors\" key={x}>\n          <label>Company Selector : </label>\n          <ContactSelector\n            contacts={contacts}\n            currentContact={contact}\n            selectedCompany={{\n              contacts: contacts.reduce((acc, current) => {\n                acc.push(current.id);\n                return acc;\n              }, []),\n            }}\n            handleContactChange={handleContactChange}\n            name={\"contact\"}\n            key={x}\n          />\n        </div>\n      );\n    }\n    return selectorArray;\n  };\n  const getContactsArray = (nodeList) => {\n    let contArr = [];\n    if (!nodeList) return contArr;\n    if (nodeList.name) {\n      if (nodeList.value === \"\") return contArr;\n      return [\n        contacts.find((contact) =>\n          `${contact.firstname} ${contact.lastname}` == nodeList.value\n            ? true\n            : false\n        ).id,\n      ];\n    }\n    for (let node of nodeList) {\n      if (node.value === \"\") continue;\n      contArr.push(\n        contacts.find((contact) =>\n          `${contact.firstname} ${contact.lastname}` == node.value\n            ? true\n            : false\n        ).id\n      );\n    }\n    return [...new Set([...contArr])];\n  };\n  const submit = async (e) => {\n    e.preventDefault();\n    setIsFetching(true);\n    const formData = {\n      name: e.target.companyName.value,\n      vat: e.target.companyVat.value,\n      status: e.target.companyStatus.value,\n      streetnumber: e.target.streetnumber.value,\n      street: e.target.street.value,\n      town: e.target.town.value,\n      country: e.target.country.value,\n      zip: e.target.zip.value,\n      contacts: getContactsArray(e.target.contact),\n    };\n    console.log(formData);\n    let check = companyVerify(formData);\n    setIsFetching(true);\n    if (check.ok) {\n      const { status, message, dataPackage } = await handleRequests(\n        \"PUT\",\n        `https://csharpproject.somee.com/api/company/${params.companyId}`,\n        isAuth.jwt,\n        formData\n      );\n      setIsLoaded(false);\n      setIsFetching(false);\n      if (status === 200) {\n        setTimeout(() => {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        }, 250);\n      } else {\n        setTimeout(() => {\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        }, 250);\n      }\n    } else {\n      setIsFetching(false);\n      const issues = Object.keys(check);\n      setTimeout(() => {\n        for (let issue of issues) {\n          if (issue !== \"ok\") {\n            toast.error(check[issue], {\n              position: toast.POSITION.BOTTOM_RIGHT,\n            });\n          }\n        }\n      }, 250);\n    }\n  };\n  const handleModif = async () => {\n    return;\n  };\n  const handleContactChange = () => {\n    return;\n  };\n  const handleDelete = async () => {\n    setIsFetching(true);\n    const { status, message } = await handleRequests(\n      \"DELETE\",\n      `https://csharpproject.somee.com/api/Company/${company.id}`,\n      isAuth.jwt\n    );\n    setIsFetching(false);\n    if (status !== 200) {\n      toast.error(\"There was an error deleting this company\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    }\n    sessionStorage.setItem(\"cogipToast\", \"Success !\");\n    setIsDeleting(false);\n    setIsLoaded(false);\n  };\n  const handleAddContactSelector = () => {\n    setSelectorAmount((amount) => amount + 1);\n  };\n  const handleRemoveContactSelector = () => {\n    setSelectorAmount((amount) => (amount >= 1 ? amount - 1 : amount));\n    console.log(selectorAmount);\n  };\n  return (\n    <main>\n      {isFetching || !loaded || !company ? (\n        <div className=\"fetching\">\n          <div className=\"lds-dual-ring\"></div>\n        </div>\n      ) : (\n        <div className=\"card\">\n          <h2>Details :</h2>\n          {isModifying ? (\n            <>\n              <form className=\"companyGrid\" onSubmit={submit} method=\"post\">\n                <section className=\"companyGrid__section\">\n                  <div className=\"companyGrid__section--child name\">\n                    <span className=\"labels\">Name : </span>\n                    <input\n                      type=\"text\"\n                      name=\"companyName\"\n                      defaultValue={company.name}\n                      required\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">VAT : </span>\n                    <input\n                      type=\"text\"\n                      name=\"companyVat\"\n                      defaultValue={company.vat}\n                      required\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Status : </span>\n                    <select\n                      name=\"companyStatus\"\n                      defaultValue={company.status}\n                      required\n                    >\n                      <option value=\"\">Select a status</option>\n                      <option value=\"Supplier\">Supplier</option>\n                      <option value=\"Customer\">Customer</option>\n                    </select>\n                  </div>\n                </section>\n                <section className=\"companyGrid__section adress\">\n                  <h3>Where</h3>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"streetnumber\" className=\"labels\">\n                      Street Number :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"streetnumber\"\n                      name=\"streetnumber\"\n                      defaultValue={company.streetnumber}\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"street\" className=\"labels\">\n                      Street :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"street\"\n                      name=\"street\"\n                      defaultValue={company.street}\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"town\" className=\"labels\">\n                      Town :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"town\"\n                      name=\"town\"\n                      defaultValue={company.town}\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"zip\" className=\"labels\">\n                      Zip Code :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"zip\"\n                      name=\"zip\"\n                      defaultValue={company.zip}\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"country\" className=\"labels\">\n                      Country :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"country\"\n                      name=\"country\"\n                      defaultValue={company.country}\n                    />\n                  </div>\n                </section>\n                <fieldset className=\"companyGrid__section\">\n                  <legend>\n                    Contacts{\" \"}\n                    <button\n                      type=\"button\"\n                      id=\"addCompanySelector\"\n                      onClick={handleAddContactSelector}\n                      style={{ padding: \"0 .5rem\" }}\n                    >\n                      +\n                    </button>\n                    <button\n                      type=\"button\"\n                      id=\"removeCompanySelector\"\n                      onClick={handleRemoveContactSelector}\n                      style={{ padding: \"0 .5rem\" }}\n                    >\n                      -\n                    </button>\n                  </legend>\n\n                  {selectorAmount\n                    ? renderSelector(selectorAmount)\n                    : \"No contact\"}\n                </fieldset>\n                <section className=\"decoration\">\n                  <CompanyIllustration />\n                </section>\n                <CompanyControls\n                  isModifying={isModifying}\n                  isDeleting={isDeleting}\n                  setIsDeleting={setIsDeleting}\n                  setIsModifying={setIsModifying}\n                  handleModif={handleModif}\n                  handleDelete={handleDelete}\n                  company={company}\n                />\n              </form>\n            </>\n          ) : (\n            <>\n              <div className=\"companyGrid\">\n                <section className=\"companyGrid__section\">\n                  <div className=\"companyGrid__section--child name\">\n                    <span className=\"labels\">Name : </span>\n                    <span id=\"companyName\">{company.name}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">VAT : </span>\n                    <span id=\"companyVat\">{company.vat}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Status : </span>\n                    <span id=\"companyStatus\">{company.status}</span>\n                  </div>\n                </section>\n                <section className=\"companyGrid__section adress\">\n                  <h3>Where</h3>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Number : </span>\n                    <span>{company.streetnumber}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Street : </span>\n                    <span>{company.street}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Town : </span>\n                    <span>{company.town}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Zip Code : </span>\n                    <span>{company.zip}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Country : </span>\n                    <span>{company.country}</span>\n                  </div>\n                </section>\n                <section className=\"companyGrid__section\">\n                  <h3>Contacts</h3>\n                  <div className=\"companyGrid__section--child\">\n                    {company.contacts.length > 0 ? (\n                      <ul>\n                        {contacts.map((el) => {\n                          if (el.companies.includes(company.id)) {\n                            return (\n                              <li\n                                key={el.id}\n                                onClick={() => {\n                                  navigate(`/contact/${el.id}`);\n                                }}\n                                style={{ cursor: \"pointer\" }}\n                              >{`${el.firstname} ${el.lastname}`}</li>\n                            );\n                          }\n                        })}\n                      </ul>\n                    ) : (\n                      <span>None</span>\n                    )}\n                  </div>\n                </section>\n                <section className=\"decoration\">\n                  <CompanyIllustration />\n                </section>\n                {isAuth.role == \"Admin\" ? (\n                  <CompanyControls\n                    isModifying={isModifying}\n                    isDeleting={isDeleting}\n                    setIsDeleting={setIsDeleting}\n                    setIsModifying={setIsModifying}\n                    handleModif={handleModif}\n                    handleDelete={handleDelete}\n                    company={company}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      )}\n      <ToastContainer />\n    </main>\n  );\n}\n\nexport default Company;\n","const invoiceVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.reference) response.reference = \"Please enter a reference\";\n  if (!dataToVerify.company) response.company = \"Please select a company\";\n  if (!dataToVerify.amount) response.amount = \"Please enter an amount\";\n  if (!dataToVerify.received) response.received = \"Please select a date\";\n  if (dataToVerify.paidStatus !== false && dataToVerify.paidStatus !== true)\n    response.paid = \"Please select a paid status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\nconst contactVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.firstname) response.firstname = \"Please enter a firstname\";\n  if (!dataToVerify.lastname) response.lastname = \"Please enter a lastname\";\n  if (!dataToVerify.companies) response.companies = \"Please select a contact\";\n  if (!dataToVerify.email) response.email = \"Please enter an email\";\n  if (!dataToVerify.phonenumber)\n    response.phonenumber = \"Please enter a phone number\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nconst companyVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.name) response.name = \"Please enter a name\";\n  if (!dataToVerify.vat) response.vat = \"Please enter a vat number\";\n  if (!dataToVerify.town) response.town = \"Please enter a town\";\n  if (!dataToVerify.street) response.street = \"Please enter a street\";\n  if (!dataToVerify.streetnumber)\n    response.streetnumber = \"Please enter a street number\";\n  if (!dataToVerify.country) response.country = \"Please enter a country\";\n  if (!dataToVerify.status) response.status = \"Please select a status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nexport { invoiceVerify, contactVerify, companyVerify };\n","function CompanyControls({\n  isModifying,\n  isDeleting,\n  setIsModifying,\n  setIsDeleting,\n  handleModif,\n  handleDelete,\n}) {\n  if (isModifying) {\n    return (\n      <div className={\"companyControls\"}>\n        <button onClick={handleModif}>Submit</button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsModifying(false);\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n  if (isDeleting) {\n    return (\n      <div className={\"companyControls\"}>\n        <button type=\"button\" onClick={handleDelete}>\n          Confirm\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsDeleting(false);\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n  return (\n    <div className={\"companyControls\"}>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsModifying(true);\n        }}\n      >\n        Modify\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsDeleting(true);\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default CompanyControls;\n"],"names":["$f04eb1098caf910f$export$2e2bcd8739ae039","companies","contacts","setIsLoaded","isAuth","loaded","length","params","$kYfAi","useParams","navigate","useNavigate","company","find","el","id","companyId","isModifying","setIsModifying","$eCRxs","useState","isDeleting","setIsDeleting","isFetching","setIsFetching","selectorAmount","setSelectorAmount","useEffect","getContactsArray","nodeList","contArr","name","value","contact","firstname","lastname","node","push","Set","handleModif","async","handleContactChange","handleDelete","status","message","$9aCo1","default","jwt","$dv2Dk","toast","error","position","POSITION","BOTTOM_RIGHT","sessionStorage","setItem","$7C6UD","jsxs","className","jsx","Fragment","onSubmit","e","preventDefault","formData","target","companyName","vat","companyVat","companyStatus","streetnumber","street","town","country","zip","console","log","check","$5H5kc","companyVerify","ok","dataPackage","setTimeout","success","issues","Object","keys","issue","method","type","defaultValue","required","htmlFor","onClick","amount","style","padding","selectorArray","x","filter","includes","$eltSV","currentContact","selectedCompany","reduce","acc","current","renderSelector","$6P85y","$llL4i","map","cursor","role","ToastContainer","$42551951195d288c$export$7e6a64f84fea9213","dataToVerify","response","reference","received","paidStatus","paid","$42551951195d288c$export$9204046200024146","email","phonenumber","$42551951195d288c$export$927967c6383eee08","$c98cd60c332eeee9$export$2e2bcd8739ae039"],"version":3,"file":"Company.be6ebb46.js.map"}