{"mappings":"meAyGAA,YA/FgBC,QAACA,EAAOC,OAAEA,EAAMC,SAAEA,IAChC,MAAOC,EAAYC,GAAiBC,EAAAC,UAAS,GACvCC,EAAgBF,EAAAG,OAAO,MACvBC,EAAWJ,EAAAG,OAAO,MAClBE,EAAgBL,EAAAG,OAAO,MACvBG,EAAWC,EAAAC,eACVC,EAAWC,GAAgBV,EAAAC,SAAS,IAgD3C,OA/CAD,EAAAW,WAAS,KACPD,EAAa,YACZ,IA6CGE,EAAAC,KACH,OAAI,CAACC,UAAS,SAAWL,oBACvBM,EAAAC,QAAI,CAACC,YAAa,KAAMC,YAAa,CAAEC,OAAQ,kBAC/C,OAAI,CAACL,UAAU,iCACb,KAAE,UAAC,gBACH,QAAK,CACJM,IAAKlB,EACLmB,KAAK,OACLC,YAAY,aACZR,UAAU,aACVS,WAAS,UAEV,QAAK,CACJH,IAAKhB,EACLiB,KAAK,WACLC,YAAY,aACZR,UAAU,sBAEX,QAAK,CAACU,QAAQ,gBAAgBV,UAAU,6BACtC,QAAK,CACJW,KAAK,gBACLC,GAAG,gBACHL,KAAK,WACLD,IAAKf,IACL,uBAGH,SAAM,CAACqB,GAAG,cAAcC,QAvEdC,MAAUC,IACzBA,EAAEC,iBACF/B,GAAc,GACd,MAAMgC,EAAeC,IACnB,IAAKA,EAAMC,MAMT,OALAlC,GAAc,GACdiC,EAAME,UAAUC,IAAI,mBACpBC,YAAU,KACRJ,EAAME,UAAUG,OAAO,qBACtB,MACI,GAGX,GAAIN,EAAY7B,EAAcoC,UAAYP,EAAY3B,EAASkC,SAC7D,OACF,MAEMC,EAAO,CAAEC,SAFEtC,EAAcoC,QAAQL,MAEJQ,SADvBrC,EAASkC,QAAQL,QAGtBS,OAACA,EAAMC,QAAEA,EAAOC,YAAEA,SAAsBC,EAAA7B,QAC7C,OACA,iDACA,KACAuB,GAEFxC,GAAc,GACC,MAAX2C,EACFN,YAAU,KACRU,EAAAC,MAAMC,MAAML,EAAS,CACnBM,SAAUH,EAAAC,MAAMG,SAASC,iBAE1B,MAEC9C,EAAciC,QAAQc,SACxBC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUZ,IAEnDa,eAAeH,QAAQ,YAAaC,KAAKC,UAAUZ,IACnDlC,EAAa,UACb0B,YAAU,KACRzC,EAAQiD,GACRtC,EAAST,EAAS6D,YACjB,gBA8B8C,eAIhD5D,EAAUc,EAAA+C,IACR,MAAG,CAAC7C,UAAU,+BACZ,MAAG,CAACA,UAAU,oBAEf,WACHgC,EAAAc,eAAc","sources":["src/components/Login.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport handleRequests from \"../logic/handleRequests.js\";\nimport Logo from \"./reusables/Logo.jsx\";\n\n// toaster\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// end toaster\n\nfunction Login({ setAuth, isAuth, location }) {\n  const [isFetching, setIsFetching] = useState(false);\n  const usernameInput = useRef(null);\n  const pwdInput = useRef(null);\n  const rememberInput = useRef(null);\n  const navigate = useNavigate();\n  const [isShowing, setIsShowing] = useState(\"\");\n  useEffect(() => {\n    setIsShowing(\"appear\");\n  }, []);\n  const onAuthClick = async (e) => {\n    e.preventDefault();\n    setIsFetching(true);\n    const exitIfEmpty = (input) => {\n      if (!input.value) {\n        setIsFetching(false);\n        input.classList.add(\"blinkInputEmpty\");\n        setTimeout(() => {\n          input.classList.remove(\"blinkInputEmpty\");\n        }, 500);\n        return true;\n      }\n    };\n    if (exitIfEmpty(usernameInput.current) || exitIfEmpty(pwdInput.current))\n      return;\n    const username = usernameInput.current.value;\n    const pwd = pwdInput.current.value;\n    const data = { userName: username, password: pwd };\n\n    const { status, message, dataPackage } = await handleRequests(\n      \"POST\",\n      \"https://csharpproject.somee.com/api/Auth/login\",\n      null,\n      data\n    );\n    setIsFetching(false);\n    if (status !== 200) {\n      setTimeout(() => {\n        toast.error(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n        });\n      }, 250);\n    } else {\n      if (rememberInput.current.checked) {\n        localStorage.setItem(\"cogipAuth\", JSON.stringify(dataPackage));\n      }\n      sessionStorage.setItem(\"cogipAuth\", JSON.stringify(dataPackage));\n      setIsShowing(\"begone\");\n      setTimeout(() => {\n        setAuth(dataPackage);\n        navigate(location.pathname);\n      }, 1000);\n    }\n  };\n  return (\n    <main className={`login ${isShowing}`}>\n      <Logo handleClick={null} handleStyle={{ height: \"10rem\" }} />\n      <form className=\"loginForm card\">\n        <h2>Login</h2>\n        <input\n          ref={usernameInput}\n          type=\"text\"\n          placeholder=\"Username :\"\n          className=\"loginInput\"\n          autoFocus\n        />\n        <input\n          ref={pwdInput}\n          type=\"password\"\n          placeholder=\"Password :\"\n          className=\"loginInput\"\n        />\n        <label htmlFor=\"rememberCheck\" className=\"rememberMe\">\n          <input\n            name=\"rememberCheck\"\n            id=\"rememberCheck\"\n            type=\"checkbox\"\n            ref={rememberInput}\n          />\n          Remember me\n        </label>\n        <button id=\"auth-button\" onClick={onAuthClick}>\n          Confirm\n        </button>\n      </form>\n      {isFetching ? (\n        <div className=\"fetching dark\">\n          <div className=\"lds-dual-ring\"></div>\n        </div>\n      ) : null}\n      <ToastContainer />\n    </main>\n  );\n}\n\nexport default Login;\n"],"names":["$19fef11b8b03a877$export$2e2bcd8739ae039","setAuth","isAuth","location","isFetching","setIsFetching","$eCRxs","useState","usernameInput","useRef","pwdInput","rememberInput","navigate","$kYfAi","useNavigate","isShowing","setIsShowing","useEffect","$7C6UD","jsxs","className","$hIpxR","default","handleClick","handleStyle","height","ref","type","placeholder","autoFocus","htmlFor","name","id","onClick","async","e","preventDefault","exitIfEmpty","input","value","classList","add","setTimeout","remove","current","data","userName","password","status","message","dataPackage","$9aCo1","$dv2Dk","toast","error","position","POSITION","BOTTOM_RIGHT","checked","localStorage","setItem","JSON","stringify","sessionStorage","pathname","jsx","ToastContainer"],"version":3,"file":"Login.be822497.js.map"}