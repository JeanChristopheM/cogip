{"mappings":"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","sources":["src/components/invoices/Invoice.jsx","src/components/invoices/InvoiceControls.jsx","src/components/reusables/CompanySelector.jsx","src/logic/formValidation.js","src/logic/dateFormatter.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport InvoiceControls from \"./InvoiceControls.jsx\";\nimport CompanySelector from \"../reusables/CompanySelector.jsx\";\nimport ContactSelector from \"../reusables/ContactSelector.jsx\";\nimport handleRequests from \"../../logic/handleRequests\";\nimport { invoiceVerify } from \"../../logic/formValidation.js\";\nimport { dateFormatter } from \"../../logic/dateFormatter\";\nimport InvoiceIllustration from \"../reusables/InvoiceIllustration.jsx\";\n\n// toaster\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// end toaster\n\nfunction Invoice({ invoices, companies, contacts, setIsLoaded, isAuth }) {\n  let params = useParams();\n  const navigate = useNavigate();\n  const loaded = invoices.length > 0 ? true : false;\n  const invoice = invoices.find((el) => el.id == params.invoiceId);\n  const company = invoice\n    ? companies.find((el) => el.id == invoice.company)\n    : null;\n  const contact = invoice\n    ? contacts.find((el) => el.id == invoice.contact)\n    : null;\n  let year = invoice ? invoice.received.slice(0, 4) : null;\n  let month = invoice ? invoice.received.slice(5, 7) : null;\n  let day = invoice ? invoice.received.slice(8, 10) : null;\n\n  const [isModifying, setIsModifying] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [selectedCompany, setSelectedCompany] = useState(company);\n  const [selectedContact, setSelectedContact] = useState(contact);\n  const [isFetching, setIsFetching] = useState(false);\n  const [newDue, setNewDue] = useState(null);\n\n  useEffect(() => {\n    if (!invoice) navigate(\"/invoices\");\n  }, [invoices]);\n  const handleContactChange = (value) => {\n    setSelectedContact(value);\n  };\n  const handleCompanyChange = (value) => {\n    setSelectedCompany(value);\n  };\n  const referenceRef = useRef();\n  const amountRef = useRef();\n  const receivedRef = useRef();\n  const paidRef = useRef();\n  const dueRef = useRef();\n  const dueDateRef = useRef();\n  const handleModif = async () => {\n    const formData = {\n      reference: referenceRef.current.value,\n      amount: amountRef.current.value,\n      company: selectedCompany.id.toString(),\n      contact: selectedContact.id.toString(),\n      received: receivedRef.current.value,\n      paidStatus:\n        amountRef.current.value - paidRef.current.value === 0 ? true : false,\n      paid: paidRef.current.value,\n      due: dueRef.current.textContent.slice(0, -1),\n      dueDate: dueDateRef.current.value,\n    };\n    console.log(formData);\n    let check = invoiceVerify(formData);\n    setIsFetching(true);\n    if (check.ok) {\n      const { status, message, dataPackage } = await handleRequests(\n        \"PUT\",\n        `https://csharpproject.somee.com/api/invoice/${params.invoiceId}`,\n        isAuth.jwt,\n        formData\n      );\n      setIsLoaded(false);\n      setIsFetching(false);\n      if (status === 200) {\n        setTimeout(() => {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        }, 250);\n      } else {\n        setTimeout(() => {\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        }, 250);\n      }\n    } else {\n      setIsFetching(false);\n      const issues = Object.keys(check);\n      setTimeout(() => {\n        for (let issue of issues) {\n          if (issue !== \"ok\") {\n            toast.error(check[issue], {\n              position: toast.POSITION.BOTTOM_RIGHT,\n            });\n          }\n        }\n      }, 250);\n    }\n  };\n  const handleDelete = async () => {\n    setIsFetching(true);\n    const { status, message } = await handleRequests(\n      \"DELETE\",\n      `https://csharpproject.somee.com/api/Invoice/${invoice.id}`,\n      isAuth.jwt\n    );\n    setIsFetching(false);\n    if (status !== 200) {\n      toast.error(\"There was an error deleting this invoice\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    }\n    sessionStorage.setItem(\"cogipToast\", \"Success !\");\n    setIsDeleting(false);\n    setIsLoaded(false);\n  };\n  const handleAmountChange = (e) => {\n    if (e.target.value < paidRef.current.value)\n      paidRef.current.value = e.target.value;\n    setNewDue(parseInt(e.target.value) - parseInt(paidRef.current.value));\n  };\n  const handlePaidChange = (e) => {\n    if (parseInt(amountRef.current.value) < parseInt(e.target.value)) {\n      e.target.value = amountRef.current.value;\n    }\n    setNewDue(parseInt(amountRef.current.value) - parseInt(e.target.value));\n  };\n  useEffect(() => {\n    setNewDue(null);\n  }, [isDeleting, isModifying]);\n  return (\n    <main>\n      {isFetching || !loaded || !invoice ? (\n        <div className=\"fetching\">\n          <div className=\"lds-dual-ring\"></div>\n        </div>\n      ) : (\n        <div className=\"card\">\n          <h2>\n            {company.status === \"Supplier\"\n              ? \"Incoming bill \"\n              : \"Outgoing bill \"}\n            details\n          </h2>\n          <div className=\"invoiceGrid\">\n            {isModifying ? (\n              <>\n                <section className=\"invoiceGrid__section--ref\">\n                  <div>\n                    <label className=\"labels\">Reference : </label>\n                    <input\n                      type=\"text\"\n                      name=\"reference\"\n                      ref={referenceRef}\n                      defaultValue={invoice.reference}\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"labels\">Date : </label>\n                    <input\n                      type=\"date\"\n                      name=\"date\"\n                      ref={receivedRef}\n                      defaultValue={`${year}-${month}-${day}`}\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"labels\">Due date : </label>\n                    <input\n                      type=\"date\"\n                      name=\"dueDate\"\n                      ref={dueDateRef}\n                      defaultValue={`${invoice.dueDate.slice(\n                        0,\n                        4\n                      )}-${invoice.dueDate.slice(5, 7)}-${invoice.dueDate.slice(\n                        8,\n                        10\n                      )}`}\n                      required\n                    />\n                  </div>\n                </section>\n                <div className=\"lowerBlock\">\n                  <section className=\"invoiceGrid__section--relations\">\n                    <h3>Company : </h3>\n                    <div className=\"company\">\n                      <CompanySelector\n                        companies={companies}\n                        handleCompanyChange={handleCompanyChange}\n                        currentCompany={company}\n                        className=\"company__value\"\n                      />\n                    </div>\n                    <div>\n                      <span className=\"labels\">Contact : </span>\n                      <ContactSelector\n                        contacts={contacts}\n                        currentContact={contact}\n                        currentCompany={company}\n                        selectedCompany={selectedCompany}\n                        handleContactChange={handleContactChange}\n                      />\n                    </div>\n                  </section>\n                  <section className=\"invoiceGrid__section--payment\">\n                    <h3>Total : </h3>\n                    <div className=\"total\">\n                      <input\n                        type=\"number\"\n                        name=\"amount\"\n                        ref={amountRef}\n                        defaultValue={invoice.amount}\n                        className=\"total__value\"\n                        onChange={handleAmountChange}\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"labels\">Paid : </label>\n                      <input\n                        type=\"text\"\n                        name=\"paid\"\n                        defaultValue={invoice.paid}\n                        ref={paidRef}\n                        onChange={handlePaidChange}\n                      />\n                    </div>\n                    <div>\n                      <span className=\"labels\">Due : </span>\n                      <span ref={dueRef}>\n                        {newDue !== null ? newDue : invoice.due}€\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"labels\">Paid status : </span>\n                      <span>{invoice.paidStatus ? \"Paid\" : \"To be paid\"}</span>\n                    </div>\n                  </section>\n                  <section className=\"decoration\">\n                    <InvoiceIllustration />\n                  </section>\n                </div>\n              </>\n            ) : (\n              <>\n                <section className=\"invoiceGrid__section--ref\">\n                  <div>\n                    <span className=\"labels\">Reference : </span>\n                    <span id=\"invoiceReference\">{invoice.reference}</span>\n                  </div>\n                  <div>\n                    <span className=\"labels\">Date : </span>\n                    <span id=\"invoiceReceived\">{`${day}-${month}-${year}`}</span>\n                  </div>\n                  <div>\n                    <span className=\"labels\">Due date : </span>\n                    <span>{dateFormatter(invoice.dueDate)}</span>\n                  </div>\n                </section>\n                <div className=\"lowerBlock\">\n                  <section className=\"invoiceGrid__section--relations\">\n                    <h3>Company : </h3>\n                    <div className=\"company\">\n                      <span\n                        id=\"invoiceCompany\"\n                        onClick={() => {\n                          navigate(`/company/${company.id}`);\n                        }}\n                        style={{ cursor: \"pointer\" }}\n                        className=\"company__value\"\n                      >\n                        {company.name}\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"labels\">Contact : </span>\n                      {contact ? (\n                        <span\n                          id=\"invoiceContact\"\n                          onClick={() => {\n                            navigate(`/contact/${contact.id}`);\n                          }}\n                          style={{ cursor: \"pointer\" }}\n                        >{`${contact.firstname} ${contact.lastname}`}</span>\n                      ) : (\n                        <span>None</span>\n                      )}\n                    </div>\n                  </section>\n                  <section className=\"invoiceGrid__section--payment\">\n                    <h3>Total : </h3>\n                    <div className=\"total\">\n                      <span id=\"invoiceAmout\" className=\"total__value\">\n                        {invoice.amount} €\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"labels\">Paid : </span>\n                      <span>{invoice.paid}€</span>\n                    </div>\n                    <div>\n                      <span className=\"labels\">Due : </span>\n                      <span>{invoice.due}€</span>\n                    </div>\n                    <div>\n                      <span className=\"labels\">Paid status : </span>\n                      <span>{invoice.paidStatus ? \"Paid\" : \"To be paid\"}</span>\n                    </div>\n                  </section>\n                  <section className=\"decoration\">\n                    <InvoiceIllustration />\n                  </section>\n                </div>\n              </>\n            )}\n          </div>\n          {isAuth.role == \"Admin\" ? (\n            <InvoiceControls\n              invoice={invoice.id}\n              isModifying={isModifying}\n              setIsModifying={setIsModifying}\n              isDeleting={isDeleting}\n              setIsDeleting={setIsDeleting}\n              originalCompany={company}\n              setSelectedCompany={setSelectedCompany}\n              originalContact={contact}\n              setSelectedContact={setSelectedContact}\n              handleModif={handleModif}\n              handleDelete={handleDelete}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n      <ToastContainer />\n    </main>\n  );\n}\n\nexport default Invoice;\n","function InvoiceControls({\n  isModifying,\n  setIsModifying,\n  setSelectedCompany,\n  originalCompany,\n  isDeleting,\n  setIsDeleting,\n  originalContact,\n  setSelectedContact,\n  handleModif,\n  handleDelete,\n}) {\n  if (isModifying) {\n    return (\n      <div className={\"invoiceControls\"}>\n        <button type=\"button\" onClick={handleModif}>\n          Submit\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsModifying(false);\n            setSelectedCompany(originalCompany);\n            setSelectedContact(originalContact);\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n  if (isDeleting) {\n    return (\n      <div className={\"invoiceControls\"}>\n        <button type=\"button\" onClick={handleDelete}>\n          Confirm\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsDeleting(false);\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n  return (\n    <div className={\"invoiceControls\"}>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsModifying(true);\n        }}\n      >\n        Modify\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsDeleting(true);\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default InvoiceControls;\n","function CompanySelector({\n  companies,\n  handleCompanyChange,\n  currentCompany,\n  name,\n}) {\n  return (\n    <select\n      onChange={(e) => {\n        let company = companies.find((el) => el.name == e.target.value)\n          ? companies.find((el) => el.name == e.target.value)\n          : \"\";\n        handleCompanyChange(company);\n      }}\n      defaultValue={currentCompany.name}\n      name={name}\n      required\n    >\n      <option value=\"\">Select a company</option>\n      {companies.map((company) => {\n        return (\n          <option value={company.name} key={company.id}>\n            {company.name}\n          </option>\n        );\n      })}\n    </select>\n  );\n}\n\nexport default CompanySelector;\n","const invoiceVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.reference) response.reference = \"Please enter a reference\";\n  if (!dataToVerify.company) response.company = \"Please select a company\";\n  if (!dataToVerify.amount) response.amount = \"Please enter an amount\";\n  if (!dataToVerify.received) response.received = \"Please select a date\";\n  if (dataToVerify.paidStatus !== false && dataToVerify.paidStatus !== true)\n    response.paid = \"Please select a paid status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\nconst contactVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.firstname) response.firstname = \"Please enter a firstname\";\n  if (!dataToVerify.lastname) response.lastname = \"Please enter a lastname\";\n  if (!dataToVerify.companies) response.companies = \"Please select a contact\";\n  if (!dataToVerify.email) response.email = \"Please enter an email\";\n  if (!dataToVerify.phonenumber)\n    response.phonenumber = \"Please enter a phone number\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nconst companyVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.name) response.name = \"Please enter a name\";\n  if (!dataToVerify.vat) response.vat = \"Please enter a vat number\";\n  if (!dataToVerify.town) response.town = \"Please enter a town\";\n  if (!dataToVerify.street) response.street = \"Please enter a street\";\n  if (!dataToVerify.streetnumber)\n    response.streetnumber = \"Please enter a street number\";\n  if (!dataToVerify.country) response.country = \"Please enter a country\";\n  if (!dataToVerify.status) response.status = \"Please select a status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nexport { invoiceVerify, contactVerify, companyVerify };\n","const dateFormatter = (dateInput) => {\n  const dateOutput = `${dateInput.slice(8, 10)}-${dateInput.slice(\n    5,\n    7\n  )}-${dateInput.slice(0, 4)}`;\n  return dateOutput;\n};\nexport { dateFormatter };\n"],"names":["$1ec4156a7929aedf$export$2e2bcd8739ae039","invoices","companies","contacts","setIsLoaded","isAuth","params","$kYfAi","useParams","navigate","useNavigate","loaded","length","invoice","find","el","id","invoiceId","company","contact","year","received","slice","month","day","isModifying","setIsModifying","$eCRxs","useState","isDeleting","setIsDeleting","selectedCompany","setSelectedCompany","selectedContact","setSelectedContact","isFetching","setIsFetching","newDue","setNewDue","useEffect","referenceRef","useRef","amountRef","receivedRef","paidRef","dueRef","dueDateRef","$7C6UD","jsxs","className","status","Fragment","type","name","ref","defaultValue","reference","required","dueDate","$4yknE","default","handleCompanyChange","value","currentCompany","$eltSV","currentContact","handleContactChange","amount","onChange","e","target","current","parseInt","paid","due","paidStatus","$lb0XH","$gXTmb","dateFormatter","onClick","style","cursor","jsx","firstname","lastname","role","$enOpT","originalCompany","originalContact","handleModif","async","formData","toString","textContent","console","log","check","$5H5kc","invoiceVerify","ok","message","dataPackage","$9aCo1","jwt","setTimeout","$dv2Dk","toast","success","position","POSITION","BOTTOM_RIGHT","error","issues","Object","keys","issue","handleDelete","sessionStorage","setItem","ToastContainer","$e497f1a838d958a9$export$2e2bcd8739ae039","$27c888b5041dae3c$export$2e2bcd8739ae039","map","$42551951195d288c$export$7e6a64f84fea9213","dataToVerify","response","$42551951195d288c$export$9204046200024146","email","phonenumber","$42551951195d288c$export$927967c6383eee08","vat","town","street","streetnumber","country","$c59d18b9d58e05d0$export$406508d2ca449bd","dateInput"],"version":3,"file":"Invoice.be6e707f.js.map"}