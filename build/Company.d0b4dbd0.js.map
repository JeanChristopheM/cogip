{"mappings":"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","sources":["src/components/companies/Company.jsx","src/logic/formValidation.js","src/components/companies/CompanyControls.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { companyVerify } from \"../../logic/formValidation.js\";\nimport handleRequests from \"../../logic/handleRequests\";\nimport CompanyControls from \"./CompanyControls.jsx\";\nimport CompanyIllustration from \"../reusables/CompanyIllustration.jsx\";\n\n// toaster\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// end toaster\n\nfunction Company({ companies, contacts, setIsLoaded, isAuth }) {\n  const loaded = companies.length > 0 ? true : false;\n  const params = useParams();\n  const navigate = useNavigate();\n  const company = companies.find((el) => el.id == params.companyId);\n  const [isModifying, setIsModifying] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    if (!company) navigate(\"/companies\");\n  }, [companies]);\n  const nameRef = useRef();\n  const vatRef = useRef();\n  const statusRef = useRef();\n  const streetnumberRef = useRef();\n  const streetRef = useRef();\n  const townRef = useRef();\n  const countryRef = useRef();\n  const zipRef = useRef();\n\n  const handleModif = async () => {\n    const formData = {\n      name: nameRef.current.value,\n      vat: vatRef.current.value,\n      status: statusRef.current.value,\n      streetnumber: streetnumberRef.current.value,\n      street: streetRef.current.value,\n      town: townRef.current.value,\n      country: countryRef.current.value,\n      zip: zipRef.current.value,\n      contacts: [],\n    };\n    console.log(formData);\n    /* let check = companyVerify(formData);\n    setIsFetching(true);\n    if (check.ok) {\n      const { status, message, dataPackage } = await handleRequests(\n        \"PUT\",\n        `https://csharpproject.somee.com/api/company/${params.companyId}`,\n        isAuth.jwt,\n        formData\n      );\n      setIsLoaded(false);\n      setIsFetching(false);\n      if (status === 200) {\n        setTimeout(() => {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        }, 250);\n      } else {\n        setTimeout(() => {\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        }, 250);\n      }\n    } else {\n      setIsFetching(false);\n      const issues = Object.keys(check);\n      setTimeout(() => {\n        for (let issue of issues) {\n          if (issue !== \"ok\") {\n            toast.error(check[issue], {\n              position: toast.POSITION.BOTTOM_RIGHT,\n            });\n          }\n        }\n      }, 250);\n    } */\n  };\n  const handleDelete = async () => {\n    setIsFetching(true);\n    const { status, message } = await handleRequests(\n      \"DELETE\",\n      `https://csharpproject.somee.com/api/Company/${company.id}`,\n      isAuth.jwt\n    );\n    setIsFetching(false);\n    if (status !== 200) {\n      toast.error(\"There was an error deleting this company\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    }\n    sessionStorage.setItem(\"cogipToast\", \"Success !\");\n    setIsDeleting(false);\n    setIsLoaded(false);\n  };\n  return (\n    <main>\n      {isFetching || !loaded || !company ? (\n        <div className=\"fetching\">\n          <div className=\"lds-dual-ring\"></div>\n        </div>\n      ) : (\n        <div className=\"card\">\n          <h2>Details :</h2>\n          <div className=\"companyGrid\">\n            {isModifying ? (\n              <>\n                <section className=\"companyGrid__section\">\n                  <div className=\"companyGrid__section--child name\">\n                    <span className=\"labels\">Name : </span>\n                    <input\n                      type=\"text\"\n                      name=\"companyName\"\n                      defaultValue={company.name}\n                      ref={nameRef}\n                      required\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">VAT : </span>\n                    <input\n                      type=\"text\"\n                      name=\"companyVat\"\n                      defaultValue={company.vat}\n                      ref={vatRef}\n                      required\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Status : </span>\n                    <select\n                      name=\"companyStatus\"\n                      ref={statusRef}\n                      defaultValue={company.status}\n                      required\n                    >\n                      <option value=\"\">Select a status</option>\n                      <option value=\"Supplier\">Supplier</option>\n                      <option value=\"Customer\">Customer</option>\n                    </select>\n                  </div>\n                </section>\n                <section className=\"companyGrid__section adress\">\n                  <h3>Where</h3>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"streetnumber\" className=\"labels\">\n                      Street Number :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"streetnumber\"\n                      name=\"streetnumber\"\n                      ref={streetnumberRef}\n                      defaultValue={company.streetnumber}\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"street\" className=\"labels\">\n                      Street :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"street\"\n                      name=\"street\"\n                      ref={streetRef}\n                      defaultValue={company.street}\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"town\" className=\"labels\">\n                      Town :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"town\"\n                      name=\"town\"\n                      ref={townRef}\n                      defaultValue={company.town}\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"zip\" className=\"labels\">\n                      Zip Code :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"zip\"\n                      name=\"zip\"\n                      ref={zipRef}\n                      defaultValue={company.zip}\n                    />\n                  </div>\n                  <div className=\"companyGrid__section--child adress\">\n                    <label htmlFor=\"country\" className=\"labels\">\n                      Country :{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"country\"\n                      name=\"country\"\n                      ref={countryRef}\n                      defaultValue={company.country}\n                    />\n                  </div>\n                </section>\n                <section className=\"companyGrid__section\">\n                  <h3>Contacts</h3>\n                  <div className=\"companyGrid__section--child\">\n                    {company.contacts.length > 0 ? (\n                      <ul>\n                        {contacts.map((el) => {\n                          if (el.companies.includes(company.id)) {\n                            return (\n                              <li\n                                key={el.id}\n                                onClick={() => {\n                                  navigate(`/contact/${el.id}`);\n                                }}\n                                style={{ cursor: \"pointer\" }}\n                              >{`${el.firstname} ${el.lastname}`}</li>\n                            );\n                          }\n                        })}\n                      </ul>\n                    ) : (\n                      <span>None</span>\n                    )}\n                  </div>\n                </section>\n                <section className=\"decoration\">\n                  <CompanyIllustration />\n                </section>\n              </>\n            ) : (\n              <>\n                <section className=\"companyGrid__section\">\n                  <div className=\"companyGrid__section--child name\">\n                    <span className=\"labels\">Name : </span>\n                    <span id=\"companyName\">{company.name}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">VAT : </span>\n                    <span id=\"companyVat\">{company.vat}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Status : </span>\n                    <span id=\"companyStatus\">{company.status}</span>\n                  </div>\n                </section>\n                <section className=\"companyGrid__section adress\">\n                  <h3>Where</h3>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Number : </span>\n                    <span>{company.streetnumber}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Street : </span>\n                    <span>{company.street}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Town : </span>\n                    <span>{company.town}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Zip Code : </span>\n                    <span>{company.zip}</span>\n                  </div>\n                  <div className=\"companyGrid__section--child\">\n                    <span className=\"labels\">Country : </span>\n                    <span>{company.country}</span>\n                  </div>\n                </section>\n                <section className=\"companyGrid__section\">\n                  <h3>Contacts</h3>\n                  <div className=\"companyGrid__section--child\">\n                    {company.contacts.length > 0 ? (\n                      <ul>\n                        {contacts.map((el) => {\n                          if (el.companies.includes(company.id)) {\n                            return (\n                              <li\n                                key={el.id}\n                                onClick={() => {\n                                  navigate(`/contact/${el.id}`);\n                                }}\n                                style={{ cursor: \"pointer\" }}\n                              >{`${el.firstname} ${el.lastname}`}</li>\n                            );\n                          }\n                        })}\n                      </ul>\n                    ) : (\n                      <span>None</span>\n                    )}\n                  </div>\n                </section>\n                <section className=\"decoration\">\n                  <CompanyIllustration />\n                </section>\n              </>\n            )}\n          </div>\n          {isAuth.role == \"Admin\" ? (\n            <CompanyControls\n              isModifying={isModifying}\n              isDeleting={isDeleting}\n              setIsDeleting={setIsDeleting}\n              setIsModifying={setIsModifying}\n              handleModif={handleModif}\n              handleDelete={handleDelete}\n              company={company}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n      <ToastContainer />\n    </main>\n  );\n}\n\nexport default Company;\n","const invoiceVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.reference) response.reference = \"Please enter a reference\";\n  if (!dataToVerify.company) response.company = \"Please select a company\";\n  if (!dataToVerify.amount) response.amount = \"Please enter an amount\";\n  if (!dataToVerify.received) response.received = \"Please select a date\";\n  if (dataToVerify.paidStatus !== false && dataToVerify.paidStatus !== true)\n    response.paid = \"Please select a paid status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\nconst contactVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.firstname) response.firstname = \"Please enter a firstname\";\n  if (!dataToVerify.lastname) response.lastname = \"Please enter a lastname\";\n  if (!dataToVerify.companies) response.companies = \"Please select a contact\";\n  if (!dataToVerify.email) response.email = \"Please enter an email\";\n  if (!dataToVerify.phonenumber)\n    response.phonenumber = \"Please enter a phone number\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nconst companyVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.name) response.name = \"Please enter a name\";\n  if (!dataToVerify.vat) response.vat = \"Please enter a vat number\";\n  if (!dataToVerify.town) response.town = \"Please enter a town\";\n  if (!dataToVerify.street) response.street = \"Please enter a street\";\n  if (!dataToVerify.streetnumber)\n    response.streetnumber = \"Please enter a street number\";\n  if (!dataToVerify.country) response.country = \"Please enter a country\";\n  if (!dataToVerify.status) response.status = \"Please select a status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nexport { invoiceVerify, contactVerify, companyVerify };\n","function CompanyControls({\n  isModifying,\n  isDeleting,\n  setIsModifying,\n  setIsDeleting,\n  handleModif,\n  handleDelete,\n}) {\n  if (isModifying) {\n    return (\n      <div className={\"companyControls\"}>\n        <button type=\"button\" onClick={handleModif}>\n          Submit\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsModifying(false);\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n  if (isDeleting) {\n    return (\n      <div className={\"companyControls\"}>\n        <button type=\"button\" onClick={handleDelete}>\n          Confirm\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsDeleting(false);\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n  return (\n    <div className={\"companyControls\"}>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsModifying(true);\n        }}\n      >\n        Modify\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsDeleting(true);\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default CompanyControls;\n"],"names":["$f04eb1098caf910f$export$2e2bcd8739ae039","companies","contacts","setIsLoaded","isAuth","loaded","length","params","$kYfAi","useParams","navigate","useNavigate","company","find","el","id","companyId","isModifying","setIsModifying","$eCRxs","useState","isDeleting","setIsDeleting","isFetching","setIsFetching","useEffect","nameRef","useRef","vatRef","statusRef","streetnumberRef","streetRef","townRef","countryRef","zipRef","$7C6UD","jsxs","className","Fragment","type","name","defaultValue","ref","required","vat","status","value","htmlFor","streetnumber","street","town","zip","country","jsx","map","includes","onClick","style","cursor","firstname","lastname","$6P85y","default","role","$llL4i","handleModif","async","formData","current","console","log","handleDelete","message","$9aCo1","jwt","$dv2Dk","toast","error","position","POSITION","BOTTOM_RIGHT","sessionStorage","setItem","ToastContainer","$42551951195d288c$export$7e6a64f84fea9213","dataToVerify","response","reference","amount","received","paidStatus","paid","ok","Object","keys","$42551951195d288c$export$9204046200024146","email","phonenumber","$42551951195d288c$export$927967c6383eee08","$c98cd60c332eeee9$export$2e2bcd8739ae039"],"version":3,"file":"Company.d0b4dbd0.js.map"}