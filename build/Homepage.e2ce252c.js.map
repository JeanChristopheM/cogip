{"mappings":"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","sources":["node_modules/chart.js/dist/chart.esm.js","node_modules/chart.js/dist/chunks/helpers.segment.js","node_modules/react-chartjs-2/src/utils.ts","node_modules/react-chartjs-2/src/chart.tsx","node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _toLeftRightCenter as $, _rlookupByKey as A, getAngleFromPoint as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, _isDomSupported as K, log10 as L, _factorize as M, finiteOrDefault as N, callback as O, PI as P, _addGrace as Q, toDegrees as R, _measureText as S, TAU as T, _int16Range as U, _alignPixel as V, clipArea as W, renderText as X, unclipArea as Y, toFont as Z, _arrayUnique as _, resolve as a, _angleDiff as a$, _alignStartEnd as a0, overrides as a1, merge as a2, _capitalize as a3, descriptors as a4, isFunction as a5, _attachContext as a6, _createResolver as a7, _descriptors as a8, mergeIf as a9, restoreTextDirection as aA, noop as aB, distanceBetweenPoints as aC, _setMinAndMaxByKey as aD, niceNum as aE, almostWhole as aF, almostEquals as aG, _decimalPlaces as aH, _longestText as aI, _filterBetween as aJ, _lookup as aK, getHoverColor as aL, clone$1 as aM, _merger as aN, _mergerIf as aO, _deprecated as aP, toFontString as aQ, splineCurve as aR, splineCurveMonotone as aS, getStyle as aT, fontString as aU, toLineHeight as aV, PITAU as aW, INFINITY as aX, RAD_PER_DEG as aY, QUARTER_PI as aZ, TWO_THIRDS_PI as a_, uid as aa, debounce as ab, retinaScale as ac, clearCanvas as ad, setsEqual as ae, _elementsEqual as af, _isClickEvent as ag, _isBetween as ah, _readValueToProps as ai, _updateBezierControlPoints as aj, _computeSegments as ak, _boundSegments as al, _steppedInterpolation as am, _bezierInterpolation as an, _pointInLine as ao, _steppedLineTo as ap, _bezierCurveTo as aq, drawPoint as ar, addRoundedRectPath as as, toTRBL as at, toTRBLCorners as au, _boundSegment as av, _normalizeAngle as aw, getRtlAdapter as ax, overrideTextDirection as ay, _textX as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","import type { ForwardedRef, MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  chart.options = { ...nextOptions };\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(nextDataset => {\n    // given the new set, find it's current match\n    const currentDataset = currentData.datasets.find(\n      dataset => dataset[datasetIdKey] === nextDataset[datasetIdKey]\n    );\n\n    // There is no original to update, so simply add new one\n    if (\n      !currentDataset ||\n      !nextDataset.data ||\n      addedDatasets.includes(currentDataset)\n    ) {\n      return { ...nextDataset };\n    }\n\n    addedDatasets.push(currentDataset);\n\n    Object.assign(currentDataset, nextDataset);\n\n    return currentDataset;\n  });\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport type { ForwardedRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ChartProps, TypedChartComponent } from './types';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options,\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update();\n    }\n  }, [redraw, options, data.labels, data.datasets]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types';\nimport { Chart } from './chart';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["$26a76db75df527ab$export$a424a0aa8f687495","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart1","anims1","date","type1","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","$1ag91","r","call","window","_update","date1","Date","now","remaining","anims","chart","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","chart10","charts","get","complete","progress","set","listen","chart2","event1","cb","push","add","chart3","items1","has","chart4","chart5","reduce","acc","cur","max","_duration","chart6","stop","chart7","cancel","remove","chart8","delete","$26a76db75df527ab$var$transparent","$26a76db75df527ab$var$interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","$26a76db75df527ab$export$c35d437ae5945fcd","cfg2","target4","prop1","currentValue","a","_fn","type","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","cfg1","to1","date2","elapsed","remain","date3","prop","wait","promises","Promise","res","rej","resolved1","method","d","$26a76db75df527ab$var$animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","resize","show","animations","visible","hide","v","$26a76db75df527ab$export$8ab227dac26677d","chart9","config4","_chart","_properties","configure","config1","animatedProps","getOwnPropertyNames","key","cfg","resolved","option","b","_animateOptions","target1","values3","newOptions","options","target","$shared","assign","$animations","$26a76db75df527ab$var$resolveTargetOptions","_createAnimations","anim","all","$26a76db75df527ab$var$awaitAll","then","target2","values1","props","charAt","value","target3","values2","size","$26a76db75df527ab$var$scaleClip","scale","allowedOverflow","opts","reverse","end","$26a76db75df527ab$var$getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","$26a76db75df527ab$var$applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","values","g","s","$26a76db75df527ab$var$isStacked","meta","stacked","$26a76db75df527ab$var$getOrCreateStack","stacks","stackKey","indexValue","subStack","$26a76db75df527ab$var$getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","$26a76db75df527ab$var$updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","$26a76db75df527ab$var$getStackKey","_top","_bottom","$26a76db75df527ab$var$getFirstScaleId","scales","filter","shift","$26a76db75df527ab$var$clearStacks","_parsed","$26a76db75df527ab$var$isDirectUpdateMode","$26a76db75df527ab$var$cloneIfNotShared","cached","shared","$26a76db75df527ab$export$75572ec5c55b4048","chart12","datasetIndex9","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","datasetIndex1","dataset","getDataset","chooseId","x","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","scale5","reset","_destroy","u","_dataCheck","adata","Array","$26a76db75df527ab$var$convertObjectDataToArray","isExtensible","l","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","config","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","start8","count8","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","meta3","data3","start1","count1","labels","getLabels","singleScale","meta1","data1","start2","count2","meta2","data2","start3","count3","xAxisKey","yAxisKey","f","getParsed","index12","getDataElement","index1","applyStack","scale1","parsed2","mode26","updateRangeFromParsed","range2","scale2","parsed1","stack1","parsedValue","NaN","getMinMax","scale3","canStack","otherScale","hidden","$26a76db75df527ab$var$createStack","range","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","$26a76db75df527ab$var$getUserBounds","_skip","getAllParsedValues","scale4","getMaxOverflow","getLabelAndValue","index2","label","getLabelForValue","mode1","_clip","t","top","right","bottom","left","disabled","$26a76db75df527ab$var$toClip","clip","$26a76db75df527ab$var$defaultClip","mode2","elements","area","chartArea","count","drawActiveElementsOnTop","element","getStyle","index3","resolveDatasetElementOptions","resolveDataElementOptions","index4","active1","mode3","context","parent","h","dataIndex","raw","$26a76db75df527ab$var$createDataContext","mode4","_resolveElementOptions","index5","mode5","dataElementType","elementType","mode6","index6","cache","cacheKey","sharing","j","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","index7","transition","active2","datasetAnimationScopeKeys","_cacheable","getSharedOptions","options1","includeOptions","mode7","sharedOptions","_animationsDisabled","updateElement","element5","index8","properties1","mode8","updateSharedOptions","sharedOptions1","mode9","_setStyle","element1","index9","mode10","active3","removeHoverStyle","element2","datasetIndex2","index10","setHoverStyle","element3","datasetIndex3","index11","_removeDatasetHoverStyle","_setDatasetHoverStyle","resetNewElements1","arg1","arg2","numMeta","numData","_insertElements","_removeElements","start4","count4","resetNewElements2","move","arr","updateElements","element4","start5","count5","mode11","start6","count6","removed","splice","_sync","args1","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","start7","count7","newCount","_onDataUnshift","$26a76db75df527ab$var$computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","$26a76db75df527ab$var$getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","$26a76db75df527ab$var$parseValue","entry","startValue","endValue","barStart","barEnd","_custom","$26a76db75df527ab$var$parseFloatBar","$26a76db75df527ab$var$parseArrayOrPrimitive","$26a76db75df527ab$var$isFloatBar","custom","$26a76db75df527ab$var$setBorderSkipped","edge","borderSkipped","horizontal","base","$26a76db75df527ab$var$borderProps","enableBorderRadius","$26a76db75df527ab$var$parseEdge","orig","v1","v2","$26a76db75df527ab$var$startEnd","$26a76db75df527ab$var$setInflateAmount","inflateAmount","ratio","defaults","prototype","$26a76db75df527ab$export$e97d5dc64e999004","meta9","data9","start19","count19","meta4","data4","start9","count9","meta5","data5","start10","count10","iAxisKey","vAxisKey","obj","range1","scale6","stack2","super","index20","mode12","bars","start11","count11","mode13","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","vpixels","k","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last1","grouped","val","isNaN","indexOf","_getStackCount","index13","_getStackIndex","datasetIndex4","name1","dataIndex1","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","index14","baseValue","minBarLength","actualBase","floating","getDataVisibility","$26a76db75df527ab$var$barSign","halfGrid","getLineWidthForValue","index15","skipNull","maxBarThickness","Infinity","next","percent","chunk","$26a76db75df527ab$var$computeFlexCategoryTraits","thickness","$26a76db75df527ab$var$computeFitCategoryTraits","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","$26a76db75df527ab$export$19b5c4773f17abe","meta6","data6","start12","count12","radius","meta7","data7","start13","count13","meta8","data8","start14","count14","index16","mode14","points","points2","start15","count15","mode15","point","iPixel","getPixelForDecimal","vPixel","skip","index17","mode16","plugins","tooltip","title","$26a76db75df527ab$export$e04603e7d8b77172","chart11","datasetIndex5","innerRadius","outerRadius","offsetX","offsetY","start16","count16","getter","_getRotation","rotation","_getCircumference","circumference","_getRotationExtents","T","isDatasetVisible","mode17","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","m","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","p","calcMin","maxX","maxY","H","minX","P","minY","$26a76db75df527ab$var$getRatioAndOffset","maxWidth","maxHeight","maxRadius","n","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","i1","animateRotate","calculateCircumference","start17","count17","mode18","animationOpts","centerX","centerY","animateScale","arc","metaData","value1","index18","o","locale","arcs1","borderAlign","borderWidth","hoverBorderWidth","arcs2","hoverOffset","datasetIndex6","ringWeightOffset","datasetIndex7","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","$26a76db75df527ab$export$3c9b5d28c11cbfd0","mode19","line","_dataset","animationsDisabled","pointCount","w","lo","hi","$26a76db75df527ab$var$getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","$26a76db75df527ab$var$scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","points1","start18","count18","mode20","spanGaps","maxGapLength","q","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","$26a76db75df527ab$export$2a270b3a0d973c85","chart13","datasetIndex8","index19","mode21","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","arcs3","start21","count21","mode22","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","index22","mode23","angleLines","display","circular","pointLabels","$26a76db75df527ab$export$b21a3f1286706191","$26a76db75df527ab$export$48dbc6ac651bf8be","index21","mode24","_fullLoop","points3","start20","count20","mode25","pointPosition","getPointPositionForValue","fill","$26a76db75df527ab$export$b2f2bae6713db87","interaction","$26a76db75df527ab$var$abstract","Error","$26a76db75df527ab$var$DateAdapter","options2","formats","value2","format","timestamp","format1","timestamp1","amount1","unit4","diff","a1","b1","unit1","startOf","timestamp2","unit2","weekday","endOf","timestamp3","unit3","override","members","$26a76db75df527ab$export$f32766ea09ec8bc4","_date","$26a76db75df527ab$var$getRelativePosition","$26a76db75df527ab$var$binarySearch","metaset","intersect","lookupMethod","_reversePixels","A","el","getRange","$26a76db75df527ab$var$optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","$26a76db75df527ab$var$getIntersectItems","useFinalPosition","z","_minPadding","inRange","$26a76db75df527ab$var$getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","$26a76db75df527ab$var$getDistanceMetricForAxis","minDistance","getCenterPoint","distance","$26a76db75df527ab$var$getNearestItems","getProps","B","$26a76db75df527ab$var$getNearestRadialItems","$26a76db75df527ab$var$getAxisItems","rangeMethod","intersectsItem","jlen","$26a76db75df527ab$var$evaluateAllVisibleItems","$26a76db75df527ab$export$a13296960cae0384","modes","nearest","$26a76db75df527ab$var$STATIC_POSITIONS","$26a76db75df527ab$var$filterByPosition","array","pos","$26a76db75df527ab$var$filterDynamicPositionByAxis","box","$26a76db75df527ab$var$sortByWeight","v0","$26a76db75df527ab$var$setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","$26a76db75df527ab$var$buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","$26a76db75df527ab$var$getCombinedMax","maxPadding","$26a76db75df527ab$var$updateMaxPadding","boxPadding","$26a76db75df527ab$var$updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","$26a76db75df527ab$var$getMargins","marginForPositions","positions","margin","$26a76db75df527ab$var$fitBoxes","boxes","refitBoxes","refit","$26a76db75df527ab$var$setBoxDims","$26a76db75df527ab$var$placeBoxes","userPadding","padding","autoPadding","$26a76db75df527ab$export$1ecca0613f5e56d2","addBox","_layers","removeBox","layoutItem","minPadding","C","layoutBoxes","$26a76db75df527ab$var$wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","$26a76db75df527ab$var$buildLayoutBoxes","verticalBoxes","horizontalBoxes","D","beforeLayout","visibleVerticalBoxCount","updatePos","change","$26a76db75df527ab$var$handleMaxPadding","$26a76db75df527ab$export$7b1aeb87f31f7da8","acquireContext","canvas2","aspectRatio2","releaseContext","context2","addEventListener","chart15","type3","listener2","removeEventListener","chart14","type2","listener1","getDevicePixelRatio","getMaximumSize","element6","width1","height1","aspectRatio1","isAttached","canvas1","updateConfig","config2","$26a76db75df527ab$export$a40a96b24b46cf35","item3","config3","$26a76db75df527ab$var$EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","$26a76db75df527ab$var$isNullOrEmpty","$26a76db75df527ab$var$eventListenerOptions","J","passive","$26a76db75df527ab$var$removeListener","listener","canvas","$26a76db75df527ab$var$nodeListContains","nodeList","node","contains","$26a76db75df527ab$var$createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","$26a76db75df527ab$var$createDetachObserver","$26a76db75df527ab$var$drpListeningCharts","$26a76db75df527ab$var$oldDevicePixelRatio","$26a76db75df527ab$var$onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","$26a76db75df527ab$var$createResizeObserver","container","F","I","clientWidth","ResizeObserver","contentRect","$26a76db75df527ab$var$listenDevicePixelRatioChanges","$26a76db75df527ab$var$releaseObserver","disconnect","$26a76db75df527ab$var$unlistenDevicePixelRatioChanges","$26a76db75df527ab$var$createProxyAndListen","proxy","event","native","$26a76db75df527ab$var$fromNativeEvent","args","$26a76db75df527ab$var$addListener","$26a76db75df527ab$export$f02da7f882cf6b2e","canvas5","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","G","displayHeight","$26a76db75df527ab$var$initCanvas","context1","removeAttribute","setAttribute","chart17","type10","listener4","proxies","$proxies","attach","detach","chart16","type4","canvas3","width2","height2","aspectRatio3","E","canvas4","isConnected","$26a76db75df527ab$export$db77ccec0bb4ccac","tooltipPosition","useFinalPosition6","hasValue","final","ret","defaultRoutes","$26a76db75df527ab$var$formatters","numeric","tickValue","notation","delta","maxTick","$26a76db75df527ab$var$calculateDelta","logDelta","L","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","$26a76db75df527ab$export$27c7467594ef87bd","$26a76db75df527ab$var$autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","$26a76db75df527ab$var$determineMaxTicks","majorIndices","major","enabled","result","$26a76db75df527ab$var$getMajorIndices","numMajorIndices","first","last","newTicks","ceil","$26a76db75df527ab$var$skipMajors","evenMajorSpacing","len","$26a76db75df527ab$var$getEvenSpacing","factors","M","$26a76db75df527ab$var$calculateSpacing","avgMajorSpacing","round","$26a76db75df527ab$var$skip","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","$26a76db75df527ab$var$offsetFromEdge","$26a76db75df527ab$var$sample","numItems","increment","$26a76db75df527ab$var$getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","$26a76db75df527ab$var$getTickMarkLength","$26a76db75df527ab$var$getTitleHeight","fallback","font","Z","lineHeight","$26a76db75df527ab$var$titleAlign","$","$26a76db75df527ab$var$reverseAlign","$26a76db75df527ab$export$d60cfc58d3c358b6","cfg7","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","options3","setContext","suggestedMin","suggestedMax","raw1","index27","N","canStack1","metas","getTicks","xLabels","yLabels","beforeUpdate","O","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","Q","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","name2","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","ticks3","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","R","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","first1","last2","sin1","cos1","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","ticks1","_computeLabelSizes","ticks2","length1","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","S","gcLen","$26a76db75df527ab$var$garbageCollect","valueAt","idx","value5","value3","index23","getValueForPixel","pixel2","index24","decimal","pixel","U","V","getDecimalForPixel","pixel1","getBaseValue","index25","$26a76db75df527ab$var$createTickContext","optionTicks","rot","_computeGridLineItems","chartArea5","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","chartArea1","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","value4","findIndex","drawGrid","chartArea2","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","chartArea3","W","X","Y","drawTitle","titleX","titleY","a0","$26a76db75df527ab$var$titleArgs","chartArea4","tz","gz","type5","axisID","index26","_maxDigits","fontSize","$26a76db75df527ab$var$TypedRegistry","type6","scope1","override1","scope","create","isForType","type7","isPrototypeOf","register","item1","proto","getPrototypeOf","parentScope","$26a76db75df527ab$var$isIChartComponent","itemDefaults","a2","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","$26a76db75df527ab$var$routeDefaults","$26a76db75df527ab$var$registerDefaults","id6","unregister","item2","$26a76db75df527ab$export$4bb7493d241fd8a5","controllers","_typedRegistries","args16","_each","args2","addControllers","args3","args4","addPlugins","args5","addScales","args6","getController","id1","_get","getElement","id2","getPlugin","id3","getScale","id4","removeControllers","args7","removeElements","args8","removePlugins","args9","removeScales","args10","args11","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","method1","registry","component","camelMethod","a3","type8","id5","typedRegistry1","type9","$26a76db75df527ab$var$PluginService","_init","notify","chart22","hook","args12","_createDescriptors","_descriptors","chart18","hook1","args13","descriptor","plugin","cancelable","invalidate","_oldCache","chart19","_notifyStateChanges","chart20","all1","local","i2","$26a76db75df527ab$var$allPlugins","$26a76db75df527ab$var$getOpts","$26a76db75df527ab$var$pluginOpts","$26a76db75df527ab$var$createDescriptors","chart21","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","$26a76db75df527ab$var$getIndexAxis","datasetDefaults","$26a76db75df527ab$var$determineAxis","scaleOptions","toLowerCase","$26a76db75df527ab$var$initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","$26a76db75df527ab$var$getDefaultScaleIDFromAxis","defaultScaleOptions","a9","defaultID","$26a76db75df527ab$var$getAxisFromDefaultScaleID","$26a76db75df527ab$var$mergeScaleConfig","$26a76db75df527ab$var$initData","$26a76db75df527ab$var$keyCache","$26a76db75df527ab$var$keysCached","Set","$26a76db75df527ab$var$cachedKeys","generate","$26a76db75df527ab$var$addIfFound","$26a76db75df527ab$var$Config","_config","$26a76db75df527ab$var$initConfig","_scopeCache","_resolverCache","platform","type11","data11","options6","clearCache","clear","datasetType","datasetType1","transition1","datasetType2","elementType1","plugin1","additionalOptionScopes","_cachedScopes","mainScope","resetCache","mainScope1","keyLists","resetCache1","a4","chartOptionScopes","scopes2","names1","context4","prefixes2","resolver","subPrefixes","$26a76db75df527ab$var$getResolver","isScriptable","isIndexable","a8","a5","$26a76db75df527ab$var$hasFunction","$26a76db75df527ab$var$needContext","subResolver","a6","scopes1","context3","prefixes1","descriptorDefaults","resolverCache","a7","$26a76db75df527ab$var$KNOWN_POSITIONS","$26a76db75df527ab$var$positionIsHorizontal","$26a76db75df527ab$var$compare2Level","l1","l2","$26a76db75df527ab$var$onAnimationsComplete","animationOptions","onComplete","$26a76db75df527ab$var$onAnimationProgress","onProgress","$26a76db75df527ab$var$getCanvas","K","getElementById","$26a76db75df527ab$var$instances","$26a76db75df527ab$var$getChart","$26a76db75df527ab$var$moveNumericKeys","intKey","$26a76db75df527ab$export$acaa6426d77a227e","item4","userConfig","initialCanvas","existingChart","OffscreenCanvas","$26a76db75df527ab$export$72cd9e67b1b784f9","aa","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","ab","resizeDelay","_initialize","maintainAspectRatio","data10","options4","responsive","ac","bindEvents","ad","width4","height4","_resizeBeforeDraw","_resize","width3","height3","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","ae","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","i3","noArea","_idx","mode27","i4","ilen1","_updateDataset","index30","mode28","layers","_drawDatasets","_drawDataset","meta10","useClip","getElementsAtEventForMode","e1","mode29","options5","useFinalPosition1","datasetIndex16","datasetIndex10","setDatasetVisibility","datasetIndex11","visible2","index28","index29","_updateVisibility","datasetIndex12","dataIndex2","visible1","datasetIndex13","dataIndex3","datasetIndex14","dataIndex4","datasetIndex15","_stop","destroy","toBase64Image","args14","toDataURL","bindUserEvents","bindResponsiveEvents","_add","listener3","_remove","listener5","detached","updateHoverStyle","items2","mode30","prefix","getActiveElements","setActiveElements","activeElements","lastActive","af","hook2","args15","filter1","active4","replay","hoverOptions","hover","deactivated","activated","replay1","inChartArea","eventFilter","_handleEvent","e2","replay2","_getActiveElements","isClick","ag","lastEvent","$26a76db75df527ab$var$determineLastEvent","onHover","e3","lastActive1","inChartArea1","useFinalPosition2","$26a76db75df527ab$var$invalidatePlugins","instances","$26a76db75df527ab$var$enumerable","$26a76db75df527ab$var$clipArc","pixelMargin","angleMargin","closePath","$26a76db75df527ab$var$parseBorderRadius$1","angleDelta","borderRadius","ai","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","$26a76db75df527ab$var$rThetaToXY","theta","$26a76db75df527ab$var$pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","$26a76db75df527ab$var$drawBorder","borderJoinStyle","inner","lineJoin","fullCircles","$26a76db75df527ab$var$drawFullCircleBorders","defineProperties","version","getChart","$26a76db75df527ab$export$d48203c759d6a1fc","cfg3","chartX","chartY","useFinalPosition3","rAdjust","betweenAngles","withinRadius","ah","useFinalPosition4","halfAngle","halfRadius","useFinalPosition5","ctx1","radiusOffset","translate","$26a76db75df527ab$var$drawArc","$26a76db75df527ab$var$setStyle","lineCap","borderCapStyle","$26a76db75df527ab$var$lineTo","previous","$26a76db75df527ab$var$pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","$26a76db75df527ab$var$pathSegment","lineMethod","stepped","ap","tension","cubicInterpolationMode","aq","$26a76db75df527ab$var$getLineMethod","$26a76db75df527ab$var$fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","$26a76db75df527ab$var$_getSegmentMethod","$26a76db75df527ab$var$usePath2D","Path2D","$26a76db75df527ab$var$draw","path","_path","$26a76db75df527ab$var$strokePathWithCache","segments","segmentMethod","$26a76db75df527ab$var$strokePathDirect","$26a76db75df527ab$export$55e463fa7bcd3469","cfg4","_points","_segments","_pointsUpdated","indexAxis1","aj","points4","ak","interpolate","point1","property1","al","_interpolate","am","an","ao","$26a76db75df527ab$var$_getInterpolationMethod","interpolated","pathSegment","ctx5","segment1","ctx2","start23","count23","ctx3","chartArea6","start22","count22","$26a76db75df527ab$var$inRange$1","hitRadius","capBezierPoints","$26a76db75df527ab$export$bd159b522b230b7a","cfg5","mouseX","mouseY","useFinalPosition10","inXRange","mouseX1","useFinalPosition7","inYRange","mouseY1","useFinalPosition8","useFinalPosition9","options7","hoverRadius","ctx4","area1","ar","$26a76db75df527ab$var$getBarBounds","bar","half","$26a76db75df527ab$var$skipOrLimit","$26a76db75df527ab$var$boundingRects","maxW","maxH","at","$26a76db75df527ab$var$parseBorderWidth","au","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","$26a76db75df527ab$var$parseBorderRadius","outer","$26a76db75df527ab$var$inRange","skipX","skipY","$26a76db75df527ab$var$addNormalRectPath","rect","$26a76db75df527ab$var$inflateRect","amount","refRect","$26a76db75df527ab$export$a16ed71bf4b07672","cfg6","ctx7","addRectPath","as","mouseX2","mouseY2","useFinalPosition14","mouseX3","useFinalPosition11","mouseY3","useFinalPosition12","useFinalPosition13","axis1","$26a76db75df527ab$var$getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","$26a76db75df527ab$var$Legend","config5","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","maxWidth1","maxHeight1","margins1","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","boxWidth2","hitboxes","totalHeight","row","itemWidth","measureText","titleHeight1","fontSize1","boxWidth1","itemHeight1","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","ax","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","ay","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","az","strikethrough","fillText","aA","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","e4","onLeave","$26a76db75df527ab$var$isListened","hoveredItem","sameItem","$26a76db75df527ab$export$ed247974535929c7","_element","_args","afterEvent","ci","$26a76db75df527ab$var$Title","config6","_padding","maxWidth2","maxHeight2","textSize","_drawArgs","fontOpts","$26a76db75df527ab$export$f99233281efd08a0","titleBlock","$26a76db75df527ab$var$createTitle","WeakMap","$26a76db75df527ab$var$positioners","average","eventPosition","nearestElement","aC","tp","$26a76db75df527ab$var$pushOrConcat","toPush","apply","$26a76db75df527ab$var$splitNewlines","str","String","$26a76db75df527ab$var$createTooltipItem","$26a76db75df527ab$var$getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","$26a76db75df527ab$var$determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","$26a76db75df527ab$var$doesNotFitWithAlign","$26a76db75df527ab$var$determineAlignment","$26a76db75df527ab$var$determineYAlign","$26a76db75df527ab$var$getBackgroundPoint","alignment","cornerRadius","paddingAndSize","$26a76db75df527ab$var$alignX","$26a76db75df527ab$var$alignY","$26a76db75df527ab$var$getAlignedX","$26a76db75df527ab$var$getBeforeAfterBodyLines","$26a76db75df527ab$var$overrideCallbacks","$26a76db75df527ab$var$Tooltip","config7","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","options22","tooltipItems","getTitle","context5","options8","beforeTitle","afterTitle","getBeforeBody","tooltipItems4","options9","getBody","tooltipItems1","options10","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","tooltipItems2","options11","getFooter","tooltipItems3","options12","beforeFooter","afterFooter","_createItems","options13","itemSort","labelColor","labelPointStyle","labelTextColor","replay3","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","ctx14","size2","options14","caretPosition","getCaretPosition","x3","y3","tooltipPoint1","size1","options15","ptX","ptY","pt","ctx8","options16","titleAlign","titleColor","_drawColorBox","ctx9","i5","options17","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","ctx10","options18","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","pt3","ctx11","options19","footerAlign","footerColor","pt4","ctx12","tooltipSize","options20","quadraticCurveTo","_updateAnimationTarget","options21","animX","animY","ctx13","hasTooltipContent","globalAlpha","activeElements1","positionChanged","_positionChanged","_ignoreReplayEvents","e5","replay4","inChartArea2","e6","lastActive2","replay5","inChartArea3","active5","e7","positioners","$26a76db75df527ab$export$28c660c63b792dea","afterInit","afterDraw","aB","labelCount","$26a76db75df527ab$var$findOrAddLabel","addedLabels","unshift","$26a76db75df527ab$var$addIfString","lastIndexOf","$26a76db75df527ab$export$29e663ba4d09fe7","_startValue","_valueRange","_addedLabels","added","index34","isFinite","value7","value6","index31","$26a76db75df527ab$var$relativeLabelSize","minSpacing","rad","$26a76db75df527ab$var$LinearScaleBase","cfg8","_endValue","raw2","index32","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","aE","aF","aG","decimalPlaces","aH","$26a76db75df527ab$var$generateTicks$1","aD","value11","$26a76db75df527ab$export$e7f4e5e8656f0b93","value8","pixel3","$26a76db75df527ab$var$isMajor","tickVal","$26a76db75df527ab$export$85295eaf7cb3ac3e","cfg9","raw3","index33","_zero","exp","endExp","endSignificand","significand","lastTick","$26a76db75df527ab$var$generateTicks","value9","value10","pixel4","$26a76db75df527ab$var$getTickBackdropHeight","$26a76db75df527ab$var$determineLimits","$26a76db75df527ab$var$fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","aI","aw","$26a76db75df527ab$var$updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","$26a76db75df527ab$var$yForAngle","$26a76db75df527ab$var$getTextAlignForAngle","$26a76db75df527ab$var$leftForTextAlign","$26a76db75df527ab$var$buildPointLabelItems","hLimits","vLimits","$26a76db75df527ab$var$pathRadiusLine","$26a76db75df527ab$export$cfafc36d95386d38","cfg10","ticks4","leftMovement","rightMovement","topMovement","bottomMovement","index40","angleMultiplier","value13","scalingFactor","getValueForDistanceFromCenter","scaledDistance","index35","pointLabel","index36","distanceFromCenter","index37","value12","getBasePosition","index38","getPointLabelPosition","index39","$26a76db75df527ab$var$drawPointLabels","gridLineOpts","$26a76db75df527ab$var$drawRadiusLine","rotate","animate","$26a76db75df527ab$var$INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","$26a76db75df527ab$var$UNITS","$26a76db75df527ab$var$sorter","$26a76db75df527ab$var$parse","input","adapter","_adapter","parser","isoWeekday","_parseOpts","$26a76db75df527ab$var$determineUnitForAutoTicks","minUnit","capacity","interval","$26a76db75df527ab$var$addTick","time","timestamps","aK","$26a76db75df527ab$var$ticksFromTimestamps","majorUnit","$26a76db75df527ab$var$setMajorTicks","$26a76db75df527ab$export$a894c72689ff3ec","props1","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","raw4","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","aJ","_getLabelCapacity","$26a76db75df527ab$var$determineUnitForFormatting","$26a76db75df527ab$var$determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","index41","format2","minorFormat","majorFormat","formatter","ticks5","value14","value15","offsets","pixel5","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","$26a76db75df527ab$var$interpolate","table","prevSource","nextSource","prevTarget","nextTarget","span","$26a76db75df527ab$export$85df64a8eb6dc986","props2","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","timestamps1","value16","pixel6","$0d933f97cefa44a9$export$43caf9889c228507","requestAnimationFrame","$0d933f97cefa44a9$export$9bb611d729802a56","thisArg","updateFn","updateArgs","ticking","rest","$0d933f97cefa44a9$export$555508cbc6add439","timeout","clearTimeout","setTimeout","$0d933f97cefa44a9$export$3d8c2f653ac9d0b9","$0d933f97cefa44a9$export$34aec0b863436764","$0d933f97cefa44a9$export$3d12bd131bb975d1","$0d933f97cefa44a9$export$9d398bebfec1c039","$0d933f97cefa44a9$export$7910e0436ed8d1de","$0d933f97cefa44a9$export$342063e11d6c3cad","$0d933f97cefa44a9$export$8b22cf2602fb60ce","isArray","toString","substr","$0d933f97cefa44a9$export$23f2a1d2818174ef","$0d933f97cefa44a9$export$39b482c5e57630a8","$0d933f97cefa44a9$export$a07804094c3ecf2d","defaultValue","$0d933f97cefa44a9$export$90a7f3efeed30595","$0d933f97cefa44a9$export$953cecd6e717a553","dimension","endsWith","parseFloat","$0d933f97cefa44a9$export$7ccc53e8f1e7dfc5","$0d933f97cefa44a9$export$c4ce752e73470fba","$0d933f97cefa44a9$export$96f57966bedc81b4","loopable","$0d933f97cefa44a9$export$c9170ad7d4cd7e57","$0d933f97cefa44a9$export$9f4f30ee63539e24","klen","$0d933f97cefa44a9$var$isValidKey","$0d933f97cefa44a9$export$faec65b429be379","tval","sval","$0d933f97cefa44a9$export$ce26c07117d59d6a","sources","merger","$0d933f97cefa44a9$export$a9c996f45e5784d0","$0d933f97cefa44a9$export$c03999cb2f36933f","hasOwnProperty","$0d933f97cefa44a9$var$indexOfDotOrLength","$0d933f97cefa44a9$export$2d1720544b23b823","$0d933f97cefa44a9$export$6559d589eb85fbb6","toUpperCase","$0d933f97cefa44a9$export$35e795649ee09318","$0d933f97cefa44a9$export$a8550f7dbe79f93a","$0d933f97cefa44a9$export$f787f51d84a910ad","$0d933f97cefa44a9$export$ee7c8ad385a60b7b","$0d933f97cefa44a9$export$56c0d5a1e737357d","$0d933f97cefa44a9$export$971d5caa766a69d7","$0d933f97cefa44a9$export$9d0e2d13d04f7070","$0d933f97cefa44a9$export$1a8f5705751d8277","$0d933f97cefa44a9$export$e171bab687b50e0","$0d933f97cefa44a9$export$7f8ddf7c7c20b3cd","$0d933f97cefa44a9$export$527e9aa3390079e9","$0d933f97cefa44a9$export$a17c37559e1db147","$0d933f97cefa44a9$export$61196ced6d74a310","log10","$0d933f97cefa44a9$export$2408f22a0fab9ae5","sign","$0d933f97cefa44a9$export$158acd800e1ef08b","roundedRange","$0d933f97cefa44a9$export$53a70dd1ebbae346","niceRange","fraction","$0d933f97cefa44a9$export$3a1a48c8f6ef640e","$0d933f97cefa44a9$export$9e5f44173e64f162","$0d933f97cefa44a9$export$cf2f7c5792f80b46","rounded","$0d933f97cefa44a9$export$24baa2b76016ce0e","$0d933f97cefa44a9$export$625550452a3fa3ec","degrees","$0d933f97cefa44a9$export$db202ddc8be9136","radians","$0d933f97cefa44a9$export$a33b77bbdbb8366c","$0d933f97cefa44a9$export$ef35774e6d314e91","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","$0d933f97cefa44a9$export$890c4ad488842ce7","$0d933f97cefa44a9$export$fef3dfd9bad05307","$0d933f97cefa44a9$export$92108d983e8ee699","$0d933f97cefa44a9$export$ffb5f4729a158638","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","$0d933f97cefa44a9$export$efccba1c4a2ef57b","$0d933f97cefa44a9$export$3a6d5c9ae78a2c08","$0d933f97cefa44a9$export$995eb9fca571757","$0d933f97cefa44a9$var$atEdge","$0d933f97cefa44a9$var$elasticIn","$0d933f97cefa44a9$var$elasticOut","$0d933f97cefa44a9$export$f1e1789686576879","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","$0d933f97cefa44a9$var$map","$0d933f97cefa44a9$var$hex","$0d933f97cefa44a9$var$h1","$0d933f97cefa44a9$var$h2","$0d933f97cefa44a9$var$eq","$0d933f97cefa44a9$var$hexString","$0d933f97cefa44a9$var$isShort","$0d933f97cefa44a9$var$round","$0d933f97cefa44a9$var$lim","$0d933f97cefa44a9$var$p2b","$0d933f97cefa44a9$var$n2b","$0d933f97cefa44a9$var$b2n","$0d933f97cefa44a9$var$n2p","$0d933f97cefa44a9$var$RGB_RE","$0d933f97cefa44a9$var$HUE_RE","$0d933f97cefa44a9$var$hsl2rgbn","$0d933f97cefa44a9$var$hsv2rgbn","$0d933f97cefa44a9$var$hwb2rgbn","rgb","$0d933f97cefa44a9$var$rgb2hsl","$0d933f97cefa44a9$var$calln","$0d933f97cefa44a9$var$hsl2rgb","$0d933f97cefa44a9$var$hue","$0d933f97cefa44a9$var$hueParse","exec","$0d933f97cefa44a9$var$hwb2rgb","$0d933f97cefa44a9$var$hsv2rgb","$0d933f97cefa44a9$var$map$1","$0d933f97cefa44a9$var$names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$0d933f97cefa44a9$var$names$1","$0d933f97cefa44a9$var$nameParse","unpacked","tkeys","ok","nk","replace","parseInt","$0d933f97cefa44a9$var$unpack","transparent","$0d933f97cefa44a9$var$modHSL","tmp","$0d933f97cefa44a9$var$clone","$0d933f97cefa44a9$var$fromObject","$0d933f97cefa44a9$var$functionParse","$0d933f97cefa44a9$var$rgbParse","$0d933f97cefa44a9$var$Color","input1","_rgb","_valid","obj1","rgbString","hslString","$0d933f97cefa44a9$var$hslString","me","c2","w2","w1","clone","clearer","greyscale","opaquer","ratio1","negate","lighten","ratio2","darken","ratio3","saturate","ratio4","desaturate","ratio5","deg","$0d933f97cefa44a9$var$rotate","$0d933f97cefa44a9$var$index_esm","$0d933f97cefa44a9$var$isPatternOrGradient","CanvasGradient","CanvasPattern","$0d933f97cefa44a9$export$db3b6bfb95261072","$0d933f97cefa44a9$export$91477dc880baac21","$0d933f97cefa44a9$export$3c2fa207a37baaea","$0d933f97cefa44a9$export$efca4cbe5dd06740","$0d933f97cefa44a9$var$getScope$1","$0d933f97cefa44a9$var$set","root","$0d933f97cefa44a9$export$4368d992c4eafac0","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scope5","scope2","scope3","scope4","scopeObject","targetScopeObject","privateName","writable","enumerable","$0d933f97cefa44a9$export$25ce5a424b770e84","longest","$0d933f97cefa44a9$export$b9a6b53f9be3734","arrayOfThings","garbageCollect","thing","nestedThing","$0d933f97cefa44a9$export$e7c866399fa523f5","halfWidth","$0d933f97cefa44a9$export$4c3d22f3d993c33f","resetTransform","clearRect","$0d933f97cefa44a9$export$d24c54395ce0c509","xOffset","yOffset","drawImage","SQRT1_2","$0d933f97cefa44a9$export$df995fae86a55f06","$0d933f97cefa44a9$export$71cec2538cb2c617","$0d933f97cefa44a9$export$8743009a87fcb00f","$0d933f97cefa44a9$export$2f6ca3d3b1f80bf5","flip","midpoint","$0d933f97cefa44a9$export$8a5498727ef6be21","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","$0d933f97cefa44a9$export$78acf4525d8a74c4","$0d933f97cefa44a9$var$setRenderOpts","strokeText","$0d933f97cefa44a9$var$decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","$0d933f97cefa44a9$export$6554612db691658e","$0d933f97cefa44a9$var$LINE_HEIGHT","RegExp","$0d933f97cefa44a9$var$FONT_STYLE","$0d933f97cefa44a9$export$1ee57be6f6687d2c","matches","match","$0d933f97cefa44a9$export$f38c853ae54ed474","objProps","read","$0d933f97cefa44a9$export$493d36ec626b6698","$0d933f97cefa44a9$export$1fbe638ecf81657e","$0d933f97cefa44a9$export$e7094788287c5e9b","$0d933f97cefa44a9$export$dc98b0b04f4c7758","$0d933f97cefa44a9$export$f96d196f7728bb5","$0d933f97cefa44a9$export$407448d2b89b1813","inputs","info","cacheable","$0d933f97cefa44a9$export$3722cfe417b6ed86","minmax","keepZero","$0d933f97cefa44a9$export$dda1d9f60106f0e9","parentContext","$0d933f97cefa44a9$export$23ebac1979863676","cmp","mid","$0d933f97cefa44a9$export$d141bba7fdc215a3","$0d933f97cefa44a9$export$ebd11618f299a286","$0d933f97cefa44a9$export$a05254e7c3aeba6e","$0d933f97cefa44a9$var$arrayEvents","$0d933f97cefa44a9$export$882b5998b3b9117c","_chartjs","defineProperty","configurable","object","$0d933f97cefa44a9$export$3b14a55fb2447963","stub","$0d933f97cefa44a9$export$71511d61b312f219","$0d933f97cefa44a9$export$a93c5207d687da10","rootScopes","getTarget","$0d933f97cefa44a9$var$_resolve","Symbol","toStringTag","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","$0d933f97cefa44a9$var$_cached","$0d933f97cefa44a9$var$readKey","$0d933f97cefa44a9$var$needsSubResolver","$0d933f97cefa44a9$var$createSubResolver","$0d933f97cefa44a9$var$_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","$0d933f97cefa44a9$var$getKeysFromAllScopes","ownKeys","storage","_storage","$0d933f97cefa44a9$export$2e2af4578d910ddf","subProxy","_context","_subProxy","$0d933f97cefa44a9$export$c3950d9923825c02","receiver","$0d933f97cefa44a9$var$_resolveScriptable","$0d933f97cefa44a9$var$_resolveArray","$0d933f97cefa44a9$var$_resolveWithContext","_allKeys","constructor","resolve","$0d933f97cefa44a9$var$resolveFallback","$0d933f97cefa44a9$var$getScope","$0d933f97cefa44a9$var$addScopes","parentScopes","parentFallback","allScopes","$0d933f97cefa44a9$var$addScopesFromKey","$0d933f97cefa44a9$var$subGetTarget","$0d933f97cefa44a9$var$resolveKeysFromAllScopes","$0d933f97cefa44a9$var$EPSILON","EPSILON","$0d933f97cefa44a9$var$getPoint","$0d933f97cefa44a9$var$getValueAxis","$0d933f97cefa44a9$export$738ab4df8bf92ae9","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","$0d933f97cefa44a9$export$d377dcb2b61d6c4e","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","$0d933f97cefa44a9$var$monotoneAdjust","$0d933f97cefa44a9$var$monotoneCompute","$0d933f97cefa44a9$var$capControlPoint","$0d933f97cefa44a9$export$3b513254972cfc9c","controlPoints","inArea","inAreaPrev","inAreaNext","$0d933f97cefa44a9$var$capBezierPoints","$0d933f97cefa44a9$export$3466f893ebf79586","$0d933f97cefa44a9$export$d66501df72047452","domNode","parentNode","host","$0d933f97cefa44a9$var$parseMaxStyle","styleValue","parentProperty","valueInPixels","$0d933f97cefa44a9$var$getComputedStyle","getComputedStyle","$0d933f97cefa44a9$var$positions","$0d933f97cefa44a9$var$getPositionedStyle","styles","suffix","$0d933f97cefa44a9$export$4a5767248b18ef41","evt","borderBox","paddings","borders","touches","shadowRoot","$0d933f97cefa44a9$var$useOffsetPos","getBoundingClientRect","clientX","clientY","$0d933f97cefa44a9$var$getCanvasPosition","$0d933f97cefa44a9$var$round1","$0d933f97cefa44a9$export$a9c23c6ac3fc3eca","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","$0d933f97cefa44a9$var$getContainerSize","$0d933f97cefa44a9$export$2219238a014317b0","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","$0d933f97cefa44a9$export$b4171a6734a65d42","passiveSupported","$0d933f97cefa44a9$export$2329c99376c9d0a4","getPropertyValue","$0d933f97cefa44a9$export$667d3bf0c5f83305","$0d933f97cefa44a9$export$7a38258bbe170828","$0d933f97cefa44a9$export$1a82df3d29112e01","$0d933f97cefa44a9$export$306ddfe3a8403e2","cp1","cp2","$0d933f97cefa44a9$var$intlCache","$0d933f97cefa44a9$export$ae1af26003f05816","num","JSON","stringify","Intl","NumberFormat","$0d933f97cefa44a9$var$getNumberFormat","$0d933f97cefa44a9$export$9fa96a7d116ea3ce","rectX","$0d933f97cefa44a9$var$getRightToLeftAdapter","_itemWidth","$0d933f97cefa44a9$export$28f7fcd39efa255","direction","original","getPropertyPriority","setProperty","prevTextDirection","$0d933f97cefa44a9$export$91c6e00c14e7e6fd","$0d933f97cefa44a9$var$propertyFn","between","compare","$0d933f97cefa44a9$var$normalizeSegment","$0d933f97cefa44a9$export$d66dc83d8cfc8dd","startBound","endBound","$0d933f97cefa44a9$var$getSegment","prevValue","inside","subStart","shouldStart","shouldStop","$0d933f97cefa44a9$export$ab83b03e4111b1d0","sub","$0d933f97cefa44a9$export$21579262ef46735b","segmentOptions","$0d933f97cefa44a9$var$findStartAndEnd","$0d933f97cefa44a9$var$splitByStyles","$0d933f97cefa44a9$var$solidSegments","chartContext","baseStyle","$0d933f97cefa44a9$var$readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","$0d933f97cefa44a9$var$styleChanged","$0d933f97cefa44a9$var$doSplitByStyles","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","defaultDatasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","$parcel$interopDefault","$eCRxs","createElement","role","Chart","forwardRef","createTypedChart","registerables","Line","LineController","Pie","BarController","RadarController","DoughnutController","PolarAreaController","BubbleController","PieController","ScatterController"],"version":3,"file":"Homepage.e2ce252c.js.map"}