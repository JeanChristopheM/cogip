{"mappings":"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","sources":["src/components/companies/Company.jsx","src/logic/formValidation.js","src/components/companies/CompanyControls.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { companyVerify } from \"../../logic/formValidation.js\";\r\nimport ContactSelector from \"../reusables/ContactSelector.jsx\";\r\nimport handleRequests from \"../../logic/handleRequests\";\r\nimport CompanyControls from \"./CompanyControls.jsx\";\r\nimport CompanyIllustration from \"../reusables/CompanyIllustration.jsx\";\r\n\r\n// toaster\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// end toaster\r\n\r\nfunction Company({ companies, contacts, setIsLoaded, isAuth }) {\r\n  const loaded = companies.length > 0 ? true : false;\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const company = companies.find((el) => el.id == params.companyId);\r\n  const [isModifying, setIsModifying] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [selectorAmount, setSelectorAmount] = useState(company.contacts.length);\r\n\r\n  useEffect(() => {\r\n    if (!company) navigate(\"/companies\");\r\n  }, [companies]);\r\n  // ! added a contact in a company and it removed the previous one\r\n  const renderSelector = (amount) => {\r\n    let selectorArray = [];\r\n    for (let x = 0; x < amount; x++) {\r\n      const contact =\r\n        company.contacts.length > 0 &&\r\n        contacts.filter((el) => company.contacts.includes(el.id))[x]\r\n          ? contacts.filter((el) => company.contacts.includes(el.id))[x]\r\n          : \"\";\r\n      selectorArray.push(\r\n        <div className=\"contactGrid__section--child selectors\" key={x}>\r\n          <label>Company Selector : </label>\r\n          <ContactSelector\r\n            contacts={contacts}\r\n            currentContact={contact}\r\n            selectedCompany={{\r\n              contacts: contacts.reduce((acc, current) => {\r\n                acc.push(current.id);\r\n                return acc;\r\n              }, []),\r\n            }}\r\n            handleContactChange={handleContactChange}\r\n            name={\"contact\"}\r\n            key={x}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return selectorArray;\r\n  };\r\n  const getContactsArray = (nodeList) => {\r\n    let contArr = [];\r\n    if (!nodeList) return contArr;\r\n    if (nodeList.name) {\r\n      if (nodeList.value === \"\") return contArr;\r\n      return [\r\n        contacts.find((contact) =>\r\n          `${contact.firstname} ${contact.lastname}` == nodeList.value\r\n            ? true\r\n            : false\r\n        ).id,\r\n      ];\r\n    }\r\n    for (let node of nodeList) {\r\n      if (node.value === \"\") continue;\r\n      contArr.push(\r\n        contacts.find((contact) =>\r\n          `${contact.firstname} ${contact.lastname}` == node.value\r\n            ? true\r\n            : false\r\n        ).id\r\n      );\r\n    }\r\n    return [...new Set([...contArr])];\r\n  };\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    setIsFetching(true);\r\n    const formData = {\r\n      name: e.target.companyName.value,\r\n      vat: e.target.companyVat.value,\r\n      status: e.target.companyStatus.value,\r\n      streetnumber: e.target.streetnumber.value,\r\n      street: e.target.street.value,\r\n      town: e.target.town.value,\r\n      country: e.target.country.value,\r\n      zip: e.target.zip.value,\r\n      contacts: getContactsArray(e.target.contact),\r\n    };\r\n    console.log(formData);\r\n    let check = companyVerify(formData);\r\n    setIsFetching(true);\r\n    if (check.ok) {\r\n      const { status, message, dataPackage } = await handleRequests(\r\n        \"PUT\",\r\n        `https://csharpproject.somee.com/api/company/${params.companyId}`,\r\n        isAuth.jwt,\r\n        formData\r\n      );\r\n      setIsLoaded(false);\r\n      setIsFetching(false);\r\n      if (status === 200) {\r\n        setTimeout(() => {\r\n          toast.success(message, {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          });\r\n        }, 250);\r\n      } else {\r\n        setTimeout(() => {\r\n          toast.error(message, {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          });\r\n        }, 250);\r\n      }\r\n    } else {\r\n      setIsFetching(false);\r\n      const issues = Object.keys(check);\r\n      setTimeout(() => {\r\n        for (let issue of issues) {\r\n          if (issue !== \"ok\") {\r\n            toast.error(check[issue], {\r\n              position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n          }\r\n        }\r\n      }, 250);\r\n    }\r\n  };\r\n  const handleModif = async () => {\r\n    return;\r\n  };\r\n  const handleContactChange = () => {\r\n    return;\r\n  };\r\n  const handleDelete = async () => {\r\n    setIsFetching(true);\r\n    const { status, message } = await handleRequests(\r\n      \"DELETE\",\r\n      `https://csharpproject.somee.com/api/Company/${company.id}`,\r\n      isAuth.jwt\r\n    );\r\n    setIsFetching(false);\r\n    if (status !== 200) {\r\n      toast.error(\"There was an error deleting this company\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n    sessionStorage.setItem(\"cogipToast\", \"Success !\");\r\n    setIsDeleting(false);\r\n    setIsLoaded(false);\r\n  };\r\n  const handleAddContactSelector = () => {\r\n    setSelectorAmount((amount) => amount + 1);\r\n  };\r\n  const handleRemoveContactSelector = () => {\r\n    setSelectorAmount((amount) => (amount >= 1 ? amount - 1 : amount));\r\n    console.log(selectorAmount);\r\n  };\r\n  return (\r\n    <main>\r\n      {isFetching || !loaded || !company ? (\r\n        <div className=\"fetching\">\r\n          <div className=\"lds-dual-ring\"></div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"card\">\r\n          <h2>Details :</h2>\r\n          {isModifying ? (\r\n            <>\r\n              <form className=\"companyGrid\" onSubmit={submit}>\r\n                <section className=\"companyGrid__section\">\r\n                  <div className=\"companyGrid__section--child name\">\r\n                    <span className=\"labels\">Name : </span>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"companyName\"\r\n                      defaultValue={company.name}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    <span className=\"labels\">VAT : </span>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"companyVat\"\r\n                      defaultValue={company.vat}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    <span className=\"labels\">Status : </span>\r\n                    <select\r\n                      name=\"companyStatus\"\r\n                      defaultValue={company.status}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select a status</option>\r\n                      <option value=\"Supplier\">Supplier</option>\r\n                      <option value=\"Customer\">Customer</option>\r\n                    </select>\r\n                  </div>\r\n                </section>\r\n                <section className=\"companyGrid__section adress\">\r\n                  <h3>Where</h3>\r\n                  <div className=\"companyGrid__section--child adress\">\r\n                    <label htmlFor=\"streetnumber\" className=\"labels\">\r\n                      Street Number :{\" \"}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"streetnumber\"\r\n                      name=\"streetnumber\"\r\n                      defaultValue={company.streetnumber}\r\n                    />\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child adress\">\r\n                    <label htmlFor=\"street\" className=\"labels\">\r\n                      Street :{\" \"}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"street\"\r\n                      name=\"street\"\r\n                      defaultValue={company.street}\r\n                    />\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child adress\">\r\n                    <label htmlFor=\"town\" className=\"labels\">\r\n                      Town :{\" \"}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"town\"\r\n                      name=\"town\"\r\n                      defaultValue={company.town}\r\n                    />\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child adress\">\r\n                    <label htmlFor=\"zip\" className=\"labels\">\r\n                      Zip Code :{\" \"}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"zip\"\r\n                      name=\"zip\"\r\n                      defaultValue={company.zip}\r\n                    />\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child adress\">\r\n                    <label htmlFor=\"country\" className=\"labels\">\r\n                      Country :{\" \"}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"country\"\r\n                      name=\"country\"\r\n                      defaultValue={company.country}\r\n                    />\r\n                  </div>\r\n                </section>\r\n                <fieldset className=\"companyGrid__section\">\r\n                  <legend>\r\n                    Contacts{\" \"}\r\n                    <button\r\n                      type=\"button\"\r\n                      id=\"addCompanySelector\"\r\n                      onClick={handleAddContactSelector}\r\n                      style={{ padding: \"0 .5rem\" }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      id=\"removeCompanySelector\"\r\n                      onClick={handleRemoveContactSelector}\r\n                      style={{ padding: \"0 .5rem\" }}\r\n                    >\r\n                      -\r\n                    </button>\r\n                  </legend>\r\n\r\n                  {selectorAmount\r\n                    ? renderSelector(selectorAmount)\r\n                    : \"No contact\"}\r\n                </fieldset>\r\n                <section className=\"decoration\">\r\n                  <CompanyIllustration />\r\n                </section>\r\n                <CompanyControls\r\n                  isModifying={isModifying}\r\n                  isDeleting={isDeleting}\r\n                  setIsDeleting={setIsDeleting}\r\n                  setIsModifying={setIsModifying}\r\n                  handleModif={handleModif}\r\n                  handleDelete={handleDelete}\r\n                  company={company}\r\n                />\r\n              </form>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"companyGrid\">\r\n                <section className=\"companyGrid__section\">\r\n                  <div className=\"companyGrid__section--child name\">\r\n                    <span className=\"labels\">Name : </span>\r\n                    <span id=\"companyName\">{company.name}</span>\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    <span className=\"labels\">VAT : </span>\r\n                    <span id=\"companyVat\">{company.vat}</span>\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    <span className=\"labels\">Status : </span>\r\n                    <span id=\"companyStatus\">{company.status}</span>\r\n                  </div>\r\n                </section>\r\n                <section className=\"companyGrid__section adress\">\r\n                  <h3>Where</h3>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    <span className=\"labels\">Number : </span>\r\n                    <span>{company.streetnumber}</span>\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    <span className=\"labels\">Street : </span>\r\n                    <span>{company.street}</span>\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    <span className=\"labels\">Town : </span>\r\n                    <span>{company.town}</span>\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    <span className=\"labels\">Zip Code : </span>\r\n                    <span>{company.zip}</span>\r\n                  </div>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    <span className=\"labels\">Country : </span>\r\n                    <span>{company.country}</span>\r\n                  </div>\r\n                </section>\r\n                <section className=\"companyGrid__section\">\r\n                  <h3>Contacts</h3>\r\n                  <div className=\"companyGrid__section--child\">\r\n                    {company.contacts.length > 0 ? (\r\n                      <ul>\r\n                        {contacts.map((el) => {\r\n                          if (el.companies.includes(company.id)) {\r\n                            return (\r\n                              <li\r\n                                key={el.id}\r\n                                onClick={() => {\r\n                                  navigate(`/contact/${el.id}`);\r\n                                }}\r\n                                style={{ cursor: \"pointer\" }}\r\n                              >{`${el.firstname} ${el.lastname}`}</li>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </ul>\r\n                    ) : (\r\n                      <span>None</span>\r\n                    )}\r\n                  </div>\r\n                </section>\r\n                <section className=\"decoration\">\r\n                  <CompanyIllustration />\r\n                </section>\r\n                {isAuth.role == \"Admin\" ? (\r\n                  <CompanyControls\r\n                    isModifying={isModifying}\r\n                    isDeleting={isDeleting}\r\n                    setIsDeleting={setIsDeleting}\r\n                    setIsModifying={setIsModifying}\r\n                    handleModif={handleModif}\r\n                    handleDelete={handleDelete}\r\n                    company={company}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n      <ToastContainer />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Company;\r\n","const invoiceVerify = (dataToVerify) => {\r\n  let response = {};\r\n  if (!dataToVerify.reference) response.reference = \"Please enter a reference\";\r\n  if (!dataToVerify.company) response.company = \"Please select a company\";\r\n  if (!dataToVerify.amount) response.amount = \"Please enter an amount\";\r\n  if (!dataToVerify.received) response.received = \"Please select a date\";\r\n  if (dataToVerify.paidStatus !== false && dataToVerify.paidStatus !== true)\r\n    response.paid = \"Please select a paid status\";\r\n  response.ok = Object.keys(response).length > 0 ? false : true;\r\n  return response;\r\n};\r\nconst contactVerify = (dataToVerify) => {\r\n  let response = {};\r\n  if (!dataToVerify.firstname) response.firstname = \"Please enter a firstname\";\r\n  if (!dataToVerify.lastname) response.lastname = \"Please enter a lastname\";\r\n  if (!dataToVerify.companies) response.companies = \"Please select a contact\";\r\n  if (!dataToVerify.email) response.email = \"Please enter an email\";\r\n  if (!dataToVerify.phonenumber)\r\n    response.phonenumber = \"Please enter a phone number\";\r\n  response.ok = Object.keys(response).length > 0 ? false : true;\r\n  return response;\r\n};\r\n\r\nconst companyVerify = (dataToVerify) => {\r\n  let response = {};\r\n  if (!dataToVerify.name) response.name = \"Please enter a name\";\r\n  if (!dataToVerify.vat) response.vat = \"Please enter a vat number\";\r\n  if (!dataToVerify.town) response.town = \"Please enter a town\";\r\n  if (!dataToVerify.street) response.street = \"Please enter a street\";\r\n  if (!dataToVerify.streetnumber)\r\n    response.streetnumber = \"Please enter a street number\";\r\n  if (!dataToVerify.country) response.country = \"Please enter a country\";\r\n  if (!dataToVerify.status) response.status = \"Please select a status\";\r\n  response.ok = Object.keys(response).length > 0 ? false : true;\r\n  return response;\r\n};\r\n\r\nexport { invoiceVerify, contactVerify, companyVerify };\r\n","function CompanyControls({\r\n  isModifying,\r\n  isDeleting,\r\n  setIsModifying,\r\n  setIsDeleting,\r\n  handleModif,\r\n  handleDelete,\r\n}) {\r\n  if (isModifying) {\r\n    return (\r\n      <div className={\"companyControls\"}>\r\n        <button onClick={handleModif}>Submit</button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setIsModifying(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  if (isDeleting) {\r\n    return (\r\n      <div className={\"companyControls\"}>\r\n        <button type=\"button\" onClick={handleDelete}>\r\n          Confirm\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setIsDeleting(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={\"companyControls\"}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setIsModifying(true);\r\n        }}\r\n      >\r\n        Modify\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setIsDeleting(true);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyControls;\r\n"],"names":["$f04eb1098caf910f$export$2e2bcd8739ae039","companies","contacts","setIsLoaded","isAuth","loaded","length","params","$kYfAi","useParams","navigate","useNavigate","company","find","el","id","companyId","isModifying","setIsModifying","$eCRxs","useState","isDeleting","setIsDeleting","isFetching","setIsFetching","selectorAmount","setSelectorAmount","useEffect","getContactsArray","nodeList","contArr","name","value","contact","firstname","lastname","node","push","Set","handleModif","async","handleContactChange","handleDelete","status","message","$9aCo1","default","jwt","$dv2Dk","toast","error","position","POSITION","BOTTOM_RIGHT","sessionStorage","setItem","$7C6UD","jsxs","className","jsx","Fragment","onSubmit","e","preventDefault","formData","target","companyName","vat","companyVat","companyStatus","streetnumber","street","town","country","zip","console","log","check","$5H5kc","companyVerify","ok","dataPackage","setTimeout","success","issues","Object","keys","issue","type","defaultValue","required","htmlFor","onClick","amount","style","padding","selectorArray","x","filter","includes","$eltSV","currentContact","selectedCompany","reduce","acc","current","renderSelector","$6P85y","$llL4i","map","cursor","role","ToastContainer","$42551951195d288c$export$7e6a64f84fea9213","dataToVerify","response","reference","received","paidStatus","paid","$42551951195d288c$export$9204046200024146","email","phonenumber","$42551951195d288c$export$927967c6383eee08","$c98cd60c332eeee9$export$2e2bcd8739ae039"],"version":3,"file":"Company.a432b82e.js.map"}