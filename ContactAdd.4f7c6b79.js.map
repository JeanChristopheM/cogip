{"mappings":"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","sources":["src/components/contacts/ContactAdd.jsx","src/logic/formValidation.js","src/components/reusables/CompanySelector.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { contactVerify } from \"../../logic/formValidation\";\nimport handleRequests from \"../../logic/handleRequests\";\nimport CompanySelector from \"../reusables/CompanySelector\";\n\n// toaster\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// end toaster\n\nfunction ContactAdd({ companies, setIsLoaded, isAuth }) {\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    const message = sessionStorage.getItem(\"cogipToast\");\n    if (!message) return;\n    const messageArray = message.split(\",\");\n    toast[messageArray[0]](messageArray[1], {\n      position: toast.POSITION.BOTTOM_RIGHT,\n    });\n    sessionStorage.removeItem(\"cogipToast\");\n  }, [isFetching]);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsFetching(true);\n    const formData = {\n      firstname: e.target.firstname.value,\n      lastname: e.target.lastname.value,\n      contactcompany: selectedCompany.id.toString(),\n      email: e.target.email.value,\n      phonenumber: e.target.phonenumber.value,\n    };\n    let check = contactVerify(formData);\n    if (check.ok) {\n      const { status, message, dataPackage } = await handleRequests(\n        \"POST\",\n        \"https://csharpproject.somee.com/api/Contact\",\n        isAuth.jwt,\n        formData\n      );\n      setIsFetching(false);\n      setIsLoaded(false);\n      if (status === 200)\n        sessionStorage.setItem(\"cogipToast\", \"success,Success !\");\n      else sessionStorage.setItem(\"cogipToast\", `error,${message}`);\n    } else {\n      setIsFetching(false);\n      const issues = Object.keys(check);\n      setTimeout(() => {\n        for (let issue of issues) {\n          if (issue !== \"ok\") {\n            toast.error(check[issue], {\n              position: toast.POSITION.BOTTOM_RIGHT,\n            });\n          }\n        }\n      }, 500);\n    }\n  };\n\n  const handleCompanyChange = (value) => {\n    setSelectedCompany(value);\n  };\n\n  return (\n    <main>\n      <div className=\"card\">\n        <h2>Fill up the form</h2>\n        <form className=\"contactForm\" onSubmit={handleSubmit}>\n          <ul>\n            <li>\n              <span>Firstname : </span>\n              <input\n                name=\"firstname\"\n                type=\"text\"\n                placeholder=\"Ex : Johnny\"\n                required\n              />\n            </li>\n            <li>\n              <span>Lastname : </span>\n              <input\n                name=\"lastname\"\n                type=\"text\"\n                placeholder=\"Ex : Begood\"\n                required\n              />\n            </li>\n            <li>\n              <span>Company : </span>\n              <CompanySelector\n                companies={companies}\n                currentCompany={\"\"}\n                handleCompanyChange={handleCompanyChange}\n                name={\"company\"}\n              />\n            </li>\n            <li>\n              <span>Email : </span>\n              <input\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"Ex : johnny.begood@yahoo.fr\"\n                required\n              />\n            </li>\n            <li>\n              <span>Phone number : </span>\n              <input\n                name=\"phonenumber\"\n                type=\"text\"\n                placeholder=\"Ex : 0487272320\"\n                required\n              />\n            </li>\n          </ul>\n          <button>Submit</button>\n        </form>\n        <ToastContainer />\n      </div>\n      {isFetching ? (\n        <div className=\"fetching dark\">\n          <div className=\"lds-dual-ring\"></div>\n        </div>\n      ) : null}\n    </main>\n  );\n}\n\nexport default ContactAdd;\n","const invoiceVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.reference) response.reference = \"Please enter a reference\";\n  if (!dataToVerify.company) response.company = \"Please select a company\";\n  if (!dataToVerify.amount) response.amount = \"Please enter an amount\";\n  if (!dataToVerify.contact) response.contact = \"Please select a contact\";\n  if (!dataToVerify.received) response.received = \"Please select a date\";\n  if (dataToVerify.paid !== false && dataToVerify.paid !== true)\n    response.paid = \"Please select a paid status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\nconst contactVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.firstname) response.firstname = \"Please enter a firstname\";\n  if (!dataToVerify.lastname) response.lastname = \"Please enter a lastname\";\n  if (!dataToVerify.contactcompany)\n    response.contactcompany = \"Please select a contact\";\n  if (!dataToVerify.email) response.email = \"Please enter an email\";\n  if (!dataToVerify.phonenumber)\n    response.phonenumber = \"Please enter a phone number\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nconst companyVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.name) response.name = \"Please enter a name\";\n  if (!dataToVerify.vat) response.vat = \"Please enter a vat number\";\n  if (!dataToVerify.status) response.status = \"Please select a status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nexport { invoiceVerify, contactVerify, companyVerify };\n","function CompanySelector({\n  companies,\n  handleCompanyChange,\n  currentCompany,\n  name,\n}) {\n  return (\n    <select\n      onChange={(e) => {\n        let company = companies.find((el) => el.name == e.target.value)\n          ? companies.find((el) => el.name == e.target.value)\n          : \"\";\n        handleCompanyChange(company);\n      }}\n      defaultValue={currentCompany.name}\n      name={name}\n      required\n    >\n      <option value=\"\">Select a company</option>\n      {companies.map((company) => {\n        return (\n          <option value={company.name} key={company.id}>\n            {company.name}\n          </option>\n        );\n      })}\n    </select>\n  );\n}\n\nexport default CompanySelector;\n"],"names":["$d2412bb43355d083$export$2e2bcd8739ae039","companies","setIsLoaded","isAuth","selectedCompany","setSelectedCompany","$eCRxs","useState","isFetching","setIsFetching","useEffect","message","sessionStorage","getItem","messageArray","split","$dv2Dk","toast","position","POSITION","BOTTOM_RIGHT","removeItem","$7C6UD","jsxs","className","onSubmit","async","e","preventDefault","formData","firstname","target","value","lastname","contactcompany","id","toString","email","phonenumber","check","$5H5kc","contactVerify","ok","status","dataPackage","$9aCo1","default","jwt","setItem","issues","Object","keys","setTimeout","issue","error","name","type","placeholder","required","$4yknE","currentCompany","handleCompanyChange","ToastContainer","jsx","$42551951195d288c$export$7e6a64f84fea9213","dataToVerify","response","reference","company","amount","contact","received","paid","length","$42551951195d288c$export$9204046200024146","$42551951195d288c$export$927967c6383eee08","vat","$27c888b5041dae3c$export$2e2bcd8739ae039","onChange","find","el","defaultValue","map"],"version":3,"file":"ContactAdd.4f7c6b79.js.map"}