{"mappings":"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","sources":["src/components/companies/CompanyAdd.jsx","src/logic/formValidation.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport handleRequests from \"../../logic/handleRequests\";\nimport { companyVerify } from \"../../logic/formValidation\";\n\n// toaster\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// end toaster\n\nfunction CompanyAdd({ setIsLoaded, isAuth }) {\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    const message = sessionStorage.getItem(\"cogipToast\");\n    if (!message) return;\n    const messageArray = message.split(\",\");\n    toast[messageArray[0]](messageArray[1], {\n      position: toast.POSITION.BOTTOM_RIGHT,\n    });\n    sessionStorage.removeItem(\"cogipToast\");\n  }, [isFetching]);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsFetching(true);\n    const formData = {\n      name: e.target.name.value,\n      vat: e.target.vat.value,\n      status: e.target.status.value,\n    };\n    let check = companyVerify(formData);\n    if (check.ok) {\n      const { status, message, dataPackage } = await handleRequests(\n        \"POST\",\n        \"https://csharpproject.somee.com/api/Company\",\n        isAuth.jwt,\n        formData\n      );\n      setIsFetching(false);\n      setIsLoaded(false);\n      if (status === 200)\n        sessionStorage.setItem(\"cogipToast\", \"success,Success !\");\n      else sessionStorage.setItem(\"cogipToast\", `error,${message}`);\n    } else {\n      setIsFetching(false);\n      const issues = Object.keys(check);\n      setTimeout(() => {\n        for (let issue of issues) {\n          if (issue !== \"ok\") {\n            toast.error(check[issue], {\n              position: toast.POSITION.BOTTOM_RIGHT,\n            });\n          }\n        }\n      }, 250);\n    }\n  };\n  return (\n    <main>\n      <div className=\"card\">\n        <h2>Fill up the form</h2>\n        <form className=\"companyForm\" onSubmit={handleSubmit}>\n          <ul>\n            <li>\n              <span>Name : </span>\n              <input\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Ex : BeCode\"\n                required\n              />\n            </li>\n            <li>\n              <span>VAT : </span>\n              <input\n                name=\"vat\"\n                type=\"text\"\n                placeholder=\"Ex : 1235431658\"\n                required\n              />\n            </li>\n            <li>\n              <span>Status : </span>\n              <select name=\"status\" required>\n                <option value=\"\">Select a status</option>\n                <option value=\"Supplier\">Supplier</option>\n                <option value=\"Client\">Client</option>\n              </select>\n            </li>\n          </ul>\n          <button>Submit</button>\n        </form>\n        <ToastContainer />\n      </div>\n      {isFetching ? (\n        <div className=\"fetching dark\">\n          <div className=\"lds-dual-ring\"></div>\n        </div>\n      ) : null}\n    </main>\n  );\n}\n\nexport default CompanyAdd;\n","const invoiceVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.reference) response.reference = \"Please enter a reference\";\n  if (!dataToVerify.company) response.company = \"Please select a company\";\n  if (!dataToVerify.amount) response.amount = \"Please enter an amount\";\n  if (!dataToVerify.contact) response.contact = \"Please select a contact\";\n  if (!dataToVerify.received) response.received = \"Please select a date\";\n  if (dataToVerify.paid !== false && dataToVerify.paid !== true)\n    response.paid = \"Please select a paid status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\nconst contactVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.firstname) response.firstname = \"Please enter a firstname\";\n  if (!dataToVerify.lastname) response.lastname = \"Please enter a lastname\";\n  if (!dataToVerify.contactcompany)\n    response.contactcompany = \"Please select a contact\";\n  if (!dataToVerify.email) response.email = \"Please enter an email\";\n  if (!dataToVerify.phonenumber)\n    response.phonenumber = \"Please enter a phone number\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nconst companyVerify = (dataToVerify) => {\n  let response = {};\n  if (!dataToVerify.name) response.name = \"Please enter a name\";\n  if (!dataToVerify.vat) response.vat = \"Please enter a vat number\";\n  if (!dataToVerify.status) response.status = \"Please select a status\";\n  response.ok = Object.keys(response).length > 0 ? false : true;\n  return response;\n};\n\nexport { invoiceVerify, contactVerify, companyVerify };\n"],"names":["$18dd121f13565d87$export$2e2bcd8739ae039","setIsLoaded","isAuth","isFetching","setIsFetching","$eCRxs","useState","useEffect","message","sessionStorage","getItem","messageArray","split","$dv2Dk","toast","position","POSITION","BOTTOM_RIGHT","removeItem","$7C6UD","jsxs","className","onSubmit","async","e","preventDefault","formData","name","target","value","vat","status","check","$5H5kc","companyVerify","ok","dataPackage","$9aCo1","default","jwt","setItem","issues","Object","keys","setTimeout","issue","error","type","placeholder","required","ToastContainer","jsx","$42551951195d288c$export$7e6a64f84fea9213","dataToVerify","response","reference","company","amount","contact","received","paid","length","$42551951195d288c$export$9204046200024146","firstname","lastname","contactcompany","email","phonenumber","$42551951195d288c$export$927967c6383eee08"],"version":3,"file":"CompanyAdd.4e74c6bc.js.map"}