.header {
  position: fixed;
  width: 100%;
  background: var(--clr-background-low);
  box-shadow: 0 4px 8px 2px var(--clr-shade);
  z-index: 9;
  #logoutLink {
    color: var(--clr-text-low);
  }
  &__container {
    max-width: var(--limiter);
    padding-inline: 1rem;
    margin: 0 auto;
    @media screen and (min-width: 900px) {
      display: flex;
      align-items: center;
      gap: 2rem;
    }
  }
  &__top {
    display: grid;
    grid-template-columns: 2rem 1fr;
    align-items: center;
    justify-items: center;
    padding: 0.6rem;
    #burger {
      font-size: 2rem;
      padding: 0.5rem 0.6;
      cursor: pointer;
    }
    h1 {
      width: max-content;
      transform: translateX(-1rem);
    }
    .svgContainer {
      transform: translateX(-2rem);
    }
    @media screen and (min-width: 900px) {
      padding: 0;
      display: block;
      #burger {
        display: none;
        width: 100px;
      }
      h1 {
        transform: translateX(0);
      }
      .svgContainer {
        transform: translateX(0);
      }
    }
  }
  &__bottom {
    display: none;
    flex: 1 1 0;
    nav {
      display: flex;
      align-items: center;
      font-weight: 600;
      a {
        cursor: pointer;
        padding: 1rem;
        position: relative;
        overflow: hidden;
        &::after {
          position: absolute;
          content: "";
          bottom: 0;
          left: 50%;
          transform: translate(-50%, var(--size));
          width: 1px;
          height: 1px;
          border-bottom: var(--size) solid var(--clr-text);
          border-top: var(--size) solid transparent;
          border-left: var(--size) solid transparent;
          border-right: var(--size) solid transparent;
          opacity: 0;
          transition: opacity var(--animationSpeed) ease-in-out,
            transform var(--animationSpeed) ease-in-out,
            border-bottom var(--animationSpeed) ease-in-out;
          pointer-events: none;
        }
        &.active {
          &::after {
            opacity: 1;
            transform: translate(-50%, 0);
            pointer-events: none;
          }
        }
        @media (hover: hover) {
          &:not(.active):hover::after {
            opacity: 1;
            border-bottom: var(--size) solid var(--clr-text-low);
            transform: translate(-50%, 0);
          }
        }
      }
      #logoutLink {
        margin-left: auto;
      }
      #settingsIcon {
        @media (hover: hover) {
          &:hover > .settingsIcon {
            animation: 1s linear infinite forwards spinIt;
          }
        }
      }
      .settingsIcon {
        transform: scale(1.5);
      }
    }
    @media screen and (min-width: 900px) {
      display: block;
    }
  }
}
@keyframes spinIt {
  from {
    transform: scale(1.5) rotate(0);
  }
  to {
    transform: scale(1.5) rotate(180deg);
  }
}
