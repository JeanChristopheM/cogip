.themeContainer {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  @media screen and (min-width: 900px) {
    flex-wrap: nowrap;
  }
  .themeCard {
    border: 1px solid var(--clr-text);
    border-radius: 0.5rem;
    flex: 1 0 100%;
    padding: 1rem;
    position: relative;
    @media screen and (min-width: 500px) {
      flex: 1 1 45%;
    }
    @media screen and (min-width: 900px) {
      flex: 1 1 25%;
    }
    &__colors {
      min-height: 120px;
      border-radius: 0.5rem;
      border: 1px solid var(--clr-text-low);
      margin-top: 0.7rem;
    }
    .primary {
      width: 80%;
      min-height: 80px;
      border-radius: 0.5rem;
      margin: 1rem auto 0 auto;
      padding: 0.3rem;
    }
    &#original {
      .themeCard__colors {
        background: #e7ecef;
        .primary {
          background: #f8f8fb;
          box-shadow: 0px 5px 5px #274c77;
          color: #274c77;
          p#lighterText {
            color: #879cb3;
          }
        }
      }
    }
    &#dark {
      .themeCard__colors {
        background: #111218;
        .primary {
          background: #191b24;
          box-shadow: 0px 5px 5px #3b3f54;
          color: #e7ecef;
          p#lighterText {
            color: #f8f8fb79;
          }
        }
      }
    }
    &#salmon {
      .themeCard__colors {
        background: #e3655b;
        .primary {
          background: #e77b73;
          box-shadow: 0px 5px 5px #21221b;
          color: #20221b;
          p#lighterText {
            color: #414436;
          }
        }
      }
    }
    &#forest {
      .themeCard__colors {
        background: #463935;
        .primary {
          background: #314b30;
          box-shadow: 0px 5px 5px #272220;
          color: #e5dedc;
          p#lighterText {
            color: #e5dedca3;
          }
        }
      }
    }
    & > * {
      pointer-events: none;
    }
  }
}
.settings__themes--title,
.settings__users--title {
  margin-bottom: 1rem;
  & button {
    float: right;
  }
}
.usersContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  position: relative;
  & > * {
    flex: 1 0 100%;
    @media screen and (min-width: 625px) {
      &:not(.fetcherHolder) {
        flex: 0 1 calc(50% - 0.5rem);
      }
    }
    @media screen and (min-width: 900px) {
      &:not(.fetcherHolder) {
        flex: 0 1 calc(33% - 0.5rem);
      }
    }
  }
  .userCard {
    display: grid;
    grid-template-areas:
      "picture name options"
      "picture username options"
      "picture email empty"
      "picture userType empty";
    grid-template-columns: 1fr 2fr min-content;
    border: 1px solid var(--clr-text);
    border-radius: 0.5rem;
    padding: 0.5rem;
    transition: transform 0.2s ease-in-out;
    position: relative;
    transform: rotate3d(0, 1, 0, 0deg);
    .imageContainer {
      grid-area: picture;
      padding-right: 1rem;
      .img {
        opacity: 0.8;
        width: min(100%, 150px);
        aspect-ratio: 1;
        border-radius: 50%;
        position: relative;
        .img--text {
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          font-weight: 600;
          font-size: 1.8rem;
          color: white;
        }
      }
    }
    .name {
      grid-area: name;
      font-weight: 600;
    }
    .username {
      grid-area: username;
      color: var(--clr-text-low);
    }
    .email {
      grid-area: email;
    }
    .userType {
      grid-area: userType;
      font-weight: 600;
    }
    .options {
      grid-area: options;
      padding: 0.3rem;
      font-size: 1.5rem;
      position: relative;
      cursor: pointer;
    }
    & > *:not(.userCardBack) {
      opacity: 1;
      pointer-events: all;
      transition: opacity 0s 0.1s;
    }
    &.active {
      transform: rotate3d(0, 1, 0, 180deg);
      & > *:not(.userCardBack) {
        opacity: 0;
        pointer-events: none;
      }
      .userCardBack {
        opacity: 1;
        pointer-events: all;
      }
    }
    //. Back of the card .
    .userCardBack {
      //* Positioning .
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      padding: 0.5rem;
      pointer-events: none;
      transform: rotate3d(0, 1, 0, 180deg);
      opacity: 0;
      transition: opacity 0s 0.1s;
      //* Layout .
      display: grid;
      grid-template-columns: 1fr max-content;
      grid-template-rows: 1fr 1fr;
      button {
        max-width: max-content;
        text-align: center;
        justify-self: center;
        font-size: 1rem;
        padding-block: 0;
        max-height: 2rem;
      }
      #deleteBtn,
      #confirmDelete,
      #cancelDelete {
        grid-row-start: 2;
      }
      & > *:last-child {
        grid-row-start: 1;
        grid-row: span 1;
      }
      .confirmationDelete {
        grid-row-start: 2;
        display: flex;
        justify-content: space-around;
      }
    }
  }
}
.fetcherHolder {
  display: flex;
  justify-content: center;
}
